{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sitan\\\\Desktop\\\\Software Engineering\\\\ParsonsProblems\\\\client\\\\src\\\\dnd-container.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { DndContext, KeyboardSensor, PointerSensor, useSensor, useSensors } from \"@dnd-kit/core\";\nimport \"./index.css\";\nimport { SortableContext, arrayMove, sortableKeyboardCoordinates, useSortable } from \"@dnd-kit/sortable\";\nimport { CSS } from \"@dnd-kit/utilities\";\nimport { useState } from \"react\";\nimport { snapGridModifier } from \"./snapGridModifier.ts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SortableItem(props) {\n  _s();\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition\n  } = useSortable({\n    id: props.id\n  });\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"item\",\n    ref: setNodeRef,\n    style: style,\n    ...attributes,\n    ...listeners,\n    children: props.id.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(SortableItem, \"wkg5t/KJzqv6GxgsNcr+u7+2tto=\", false, function () {\n  return [useSortable];\n});\n_c = SortableItem;\nexport const DndContainer = ({\n  file\n}) => {\n  _s2();\n  const [items, setitems] = useState(file);\n  useEffect(() => setitems(file), [file]);\n  const sensors = useSensors(useSensor(PointerSensor), useSensor(KeyboardSensor, {\n    coordinateGetter: sortableKeyboardCoordinates\n  }));\n  const [activeId, setActiveId] = useState(null);\n  function handleDragStart(event) {\n    setActiveId(event.active.id);\n  }\n  function handleDragOver(event, targetItem) {\n    const {\n      active,\n      over\n    } = event;\n    if (activeId !== over.id) {\n      setitems(items => {\n        const oldIndex = items.indexOf(activeId);\n        const newIndex = items.indexOf(over.id);\n        return arrayMove(items, oldIndex, newIndex);\n      });\n    }\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sortable-list\",\n      children: /*#__PURE__*/_jsxDEV(DndContext, {\n        sensors: sensors,\n        onDragOver: handleDragOver,\n        onDragStart: handleDragStart,\n        modifiers: [snapGridModifier],\n        children: /*#__PURE__*/_jsxDEV(SortableContext, {\n          items: items,\n          children: items.map(item => /*#__PURE__*/_jsxDEV(SortableItem, {\n            id: item\n          }, item, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-md-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"button\",\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-md-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"button\",\n            children: \"Check\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s2(DndContainer, \"qGynqnUar9t9D568faNHTmfFubY=\", false, function () {\n  return [useSensors, useSensor, useSensor];\n});\n_c2 = DndContainer;\nexport default DndContainer;\nvar _c, _c2;\n$RefreshReg$(_c, \"SortableItem\");\n$RefreshReg$(_c2, \"DndContainer\");","map":{"version":3,"names":["DndContext","KeyboardSensor","PointerSensor","useSensor","useSensors","SortableContext","arrayMove","sortableKeyboardCoordinates","useSortable","CSS","useState","snapGridModifier","jsxDEV","_jsxDEV","Fragment","_Fragment","SortableItem","props","_s","attributes","listeners","setNodeRef","transform","transition","id","style","Transform","toString","className","ref","children","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","DndContainer","file","_s2","items","setitems","useEffect","sensors","coordinateGetter","activeId","setActiveId","handleDragStart","event","active","handleDragOver","targetItem","over","oldIndex","indexOf","newIndex","onDragOver","onDragStart","modifiers","map","item","class","_c2","$RefreshReg$"],"sources":["C:/Users/sitan/Desktop/Software Engineering/ParsonsProblems/client/src/dnd-container.js"],"sourcesContent":["import {\r\n  DndContext,\r\n  KeyboardSensor,\r\n  PointerSensor,\r\n  useSensor,\r\n  useSensors\r\n} from \"@dnd-kit/core\";\r\nimport \"./index.css\";\r\n\r\nimport {\r\n  SortableContext,\r\n  arrayMove,\r\n  sortableKeyboardCoordinates,\r\n  useSortable\r\n} from \"@dnd-kit/sortable\";\r\nimport { CSS } from \"@dnd-kit/utilities\";\r\nimport { useState } from \"react\";\r\nimport { snapGridModifier } from \"./snapGridModifier.ts\";\r\n\r\nfunction SortableItem(props) {\r\n  const {\r\n    attributes,\r\n    listeners,\r\n    setNodeRef,\r\n    transform,\r\n    transition\r\n  } = useSortable({ id: props.id });\r\n\r\n  const style = {\r\n    transform: CSS.Transform.toString(transform),\r\n    transition\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"item\"\r\n      ref={setNodeRef}\r\n      style={style}\r\n      {...attributes}\r\n      {...listeners}\r\n    >\r\n      {props.id.name}\r\n    </div>\r\n  );\r\n}\r\nexport const DndContainer = ({file}) => {\r\n  const [items, setitems] = useState(file);\r\n  \r\n  useEffect(() => setitems(file), [file]);\r\n  const sensors = useSensors(\r\n    useSensor(PointerSensor),\r\n    useSensor(KeyboardSensor, {\r\n      coordinateGetter: sortableKeyboardCoordinates\r\n    })\r\n  );\r\n  \r\n  const [activeId, setActiveId] = useState(null);\r\n\r\n  function handleDragStart(event) {\r\n    setActiveId(event.active.id);\r\n  }\r\n  function handleDragOver(event, targetItem) {\r\n\r\n    const { active, over } = event;\r\n\r\n    if (activeId !== over.id) {\r\n      setitems((items) => {\r\n        const oldIndex = items.indexOf(activeId);\r\n        const newIndex = items.indexOf(over.id);\r\n\r\n        return arrayMove(items, oldIndex, newIndex);\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"sortable-list\">\r\n          <DndContext\r\n            sensors={sensors}\r\n            onDragOver={handleDragOver}\r\n            onDragStart={handleDragStart}\r\n            modifiers={[snapGridModifier]}\r\n            \r\n          >\r\n              <SortableContext\r\n                items={items}\r\n              >\r\n                {items.map((item) => (\r\n                  <SortableItem key={item} id={item} />\r\n                ))}\r\n              </SortableContext>\r\n\r\n          </DndContext>\r\n          \r\n      </div>\r\n\r\n      <div class = \"container text-center\">\r\n      <div class=\"row mt-3\">\r\n          <div class=\"col-md-2\">\r\n            <button class = \"button\">Reset</button>\r\n          </div>\r\n          <div class=\"col-md-2\">\r\n            <button class = \"button\">Check</button>\r\n          </div>\r\n      </div>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n}\r\nexport default DndContainer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}