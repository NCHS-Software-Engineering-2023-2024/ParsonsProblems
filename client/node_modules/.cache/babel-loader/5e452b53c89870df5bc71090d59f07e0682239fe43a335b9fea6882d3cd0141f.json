{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\glenn\\\\OneDrive\\\\Desktop\\\\GitHub\\\\parsons-problems\\\\client\\\\src\\\\dnd-container.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { DndContext, KeyboardSensor, PointerSensor, useSensor, useSensors } from \"@dnd-kit/core\";\nimport \"./index.css\";\nimport { restrictToVerticalAxis } from \"@dnd-kit/modifiers\";\nimport { SortableContext, arrayMove, sortableKeyboardCoordinates, useSortable, verticalListSortingStrategy } from \"@dnd-kit/sortable\";\nimport { CSS } from \"@dnd-kit/utilities\";\nimport { useContext, useState } from \"react\";\nimport { fileContext } from \"./fileContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SortableItem(props) {\n  _s();\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition\n  } = useSortable({\n    id: props.id\n  });\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"item\",\n    ref: setNodeRef,\n    style: style,\n    ...attributes,\n    ...listeners,\n    children: props.id.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(SortableItem, \"wkg5t/KJzqv6GxgsNcr+u7+2tto=\", false, function () {\n  return [useSortable];\n});\n_c = SortableItem;\nexport const DndContainer = () => {\n  _s2();\n  const {\n    file\n  } = useContext(fileContext);\n  this.forceUpdate();\n  const [items, setitems] = useState(file);\n  const sensors = useSensors(useSensor(PointerSensor), useSensor(KeyboardSensor, {\n    coordinateGetter: sortableKeyboardCoordinates\n  }));\n  const [activeId, setActiveId] = useState(null);\n  function handleDragStart(event) {\n    setActiveId(event.active.id);\n  }\n  function handleDragOver(event, targetItem) {\n    const {\n      active,\n      over\n    } = event;\n    if (activeId !== over.id) {\n      setitems(items => {\n        const oldIndex = items.indexOf(activeId);\n        const newIndex = items.indexOf(over.id);\n        return arrayMove(items, oldIndex, newIndex);\n      });\n    }\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(DndContext, {\n    sensors: sensors,\n    onDragOver: handleDragOver,\n    onDragStart: handleDragStart,\n    modifiers: [restrictToVerticalAxis],\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sortable-list\",\n      children: /*#__PURE__*/_jsxDEV(SortableContext, {\n        items: items,\n        strategy: verticalListSortingStrategy,\n        children: items.map(item => /*#__PURE__*/_jsxDEV(SortableItem, {\n          id: item\n        }, item, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s2(DndContainer, \"E+2SRWZAklK3Di/r1rl5vADZ/XM=\", false, function () {\n  return [useSensors, useSensor, useSensor];\n});\n_c2 = DndContainer;\nexport default DndContainer;\nvar _c, _c2;\n$RefreshReg$(_c, \"SortableItem\");\n$RefreshReg$(_c2, \"DndContainer\");","map":{"version":3,"names":["DndContext","KeyboardSensor","PointerSensor","useSensor","useSensors","restrictToVerticalAxis","SortableContext","arrayMove","sortableKeyboardCoordinates","useSortable","verticalListSortingStrategy","CSS","useContext","useState","fileContext","jsxDEV","_jsxDEV","SortableItem","props","_s","attributes","listeners","setNodeRef","transform","transition","id","style","Transform","toString","className","ref","children","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","DndContainer","_s2","file","forceUpdate","items","setitems","sensors","coordinateGetter","activeId","setActiveId","handleDragStart","event","active","handleDragOver","targetItem","over","oldIndex","indexOf","newIndex","onDragOver","onDragStart","modifiers","strategy","map","item","_c2","$RefreshReg$"],"sources":["C:/Users/glenn/OneDrive/Desktop/GitHub/parsons-problems/client/src/dnd-container.js"],"sourcesContent":["import {\r\n  DndContext,\r\n  KeyboardSensor,\r\n  PointerSensor,\r\n  useSensor,\r\n  useSensors,\r\n} from \"@dnd-kit/core\";\r\nimport \"./index.css\";\r\n\r\nimport { restrictToVerticalAxis } from \"@dnd-kit/modifiers\";\r\nimport {\r\n  SortableContext,\r\n  arrayMove,\r\n  sortableKeyboardCoordinates,\r\n  useSortable,\r\n  verticalListSortingStrategy\r\n} from \"@dnd-kit/sortable\";\r\nimport { CSS } from \"@dnd-kit/utilities\";\r\nimport { useContext, useState } from \"react\";\r\nimport { fileContext } from \"./fileContext\";\r\nfunction SortableItem(props) {\r\n  const {\r\n    attributes,\r\n    listeners,\r\n    setNodeRef,\r\n    transform,\r\n    transition\r\n  } = useSortable({ id: props.id });\r\n\r\n  const style = {\r\n    transform: CSS.Transform.toString(transform),\r\n    transition\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"item\"\r\n      ref={setNodeRef}\r\n      style={style}\r\n      {...attributes}\r\n      {...listeners}\r\n    >\r\n      {props.id.name}\r\n    </div>\r\n  );\r\n}\r\nexport const DndContainer = () => {\r\n  const { file } = useContext(fileContext);\r\n  this.forceUpdate()\r\n  const [items, setitems] = useState(file);\r\n  \r\n  \r\n  const sensors = useSensors(\r\n    useSensor(PointerSensor),\r\n    useSensor(KeyboardSensor, {\r\n      coordinateGetter: sortableKeyboardCoordinates\r\n    })\r\n  );\r\n\r\n  const [activeId, setActiveId] = useState(null);\r\n\r\n  function handleDragStart(event) {\r\n    setActiveId(event.active.id);\r\n  }\r\n  function handleDragOver(event, targetItem) {\r\n\r\n    const { active, over } = event;\r\n\r\n    if (activeId !== over.id) {\r\n      setitems((items) => {\r\n        const oldIndex = items.indexOf(activeId);\r\n        const newIndex = items.indexOf(over.id);\r\n\r\n        return arrayMove(items, oldIndex, newIndex);\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n        <DndContext\r\n          sensors={sensors}\r\n          onDragOver={handleDragOver}\r\n          onDragStart={handleDragStart}\r\n          modifiers={[restrictToVerticalAxis]}\r\n        >\r\n          <div className=\"sortable-list\">\r\n            <SortableContext\r\n              items={items}\r\n              strategy={verticalListSortingStrategy}\r\n            >\r\n              {items.map((item) => (\r\n                <SortableItem key={item} id={item} />\r\n              ))}\r\n            </SortableContext>\r\n          </div>\r\n        </DndContext>\r\n  );\r\n\r\n}\r\nexport default DndContainer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}