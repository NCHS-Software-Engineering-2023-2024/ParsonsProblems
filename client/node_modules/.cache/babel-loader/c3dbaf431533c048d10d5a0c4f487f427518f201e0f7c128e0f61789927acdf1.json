{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cmemery\\\\Desktop\\\\parsons-problems\\\\client\\\\src\\\\Container.js\",\n  _s = $RefreshSig$();\nimport update from 'immutability-helper';\nimport { useCallback, useState } from 'react';\nimport { Card } from './Card.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst style = {\n  width: 400\n};\nexport const Container = () => {\n  _s();\n  {\n    const [cards, setCards] = useState([{\n      id: 1,\n      text: 'asdf'\n    }, {\n      id: 2,\n      text: 'asdfg'\n    }, {\n      id: 3,\n      text: 'asdfgh'\n    }, {\n      id: 4,\n      text: 'asdfghj'\n    }, {\n      id: 5,\n      text: 'asdfghjk'\n    }, {\n      id: 6,\n      text: \"asdfghjkl\"\n    }, {\n      id: 7,\n      text: 'asdfghjkl;'\n    }]);\n    const moveCard = useCallback((dragIndex, hoverIndex) => {\n      setCards(prevCards => update(prevCards, {\n        $splice: [[dragIndex, 1], [hoverIndex, 0, prevCards[dragIndex]]]\n      }));\n    }, []);\n    const renderCard = useCallback((card, index) => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        index: index,\n        id: card.id,\n        text: card.text,\n        moveCard: moveCard\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this);\n    }, []);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: style,\n        children: cards.map((card, i) => renderCard(card, i))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n};\n_s(Container, \"fWB1Vh+LJt/9USrIVD9ionNTYaI=\");\n_c = Container;\nvar _c;\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"names":["update","useCallback","useState","Card","jsxDEV","_jsxDEV","Fragment","_Fragment","style","width","Container","_s","cards","setCards","id","text","moveCard","dragIndex","hoverIndex","prevCards","$splice","renderCard","card","index","fileName","_jsxFileName","lineNumber","columnNumber","children","map","i","_c","$RefreshReg$"],"sources":["C:/Users/cmemery/Desktop/parsons-problems/client/src/Container.js"],"sourcesContent":["import update from 'immutability-helper'\r\nimport { useCallback, useState } from 'react'\r\nimport { Card } from './Card.js'\r\nconst style = {\r\n  width: 400,\r\n}\r\nexport const Container = () => {\r\n  {\r\n    const [cards, setCards] = useState([\r\n      {\r\n        id: 1,\r\n        text: 'asdf',\r\n      },\r\n      {\r\n        id: 2,  \r\n        text: 'asdfg',\r\n      },\r\n      {\r\n        id: 3,\r\n        text: 'asdfgh',\r\n      },\r\n      {\r\n        id: 4,\r\n        text: 'asdfghj',\r\n      },\r\n      {\r\n        id: 5,\r\n        text: 'asdfghjk',\r\n      },\r\n      {\r\n        id: 6,\r\n        text: \"asdfghjkl\",\r\n      },\r\n      {\r\n        id: 7,\r\n        text: 'asdfghjkl;',\r\n      },\r\n    ])\r\n    const moveCard = useCallback((dragIndex, hoverIndex) => {\r\n      setCards((prevCards) =>\r\n        update(prevCards, {\r\n          $splice: [\r\n            [dragIndex, 1],\r\n            [hoverIndex, 0, prevCards[dragIndex]],\r\n          ],\r\n        }),\r\n      )\r\n    }, [])\r\n    const renderCard = useCallback((card, index) => {\r\n      return (\r\n        <Card\r\n          key={card.id}\r\n          index={index}\r\n          id={card.id}\r\n          text={card.text}\r\n          moveCard={moveCard}\r\n        />\r\n      )\r\n    }, [])\r\n    return (\r\n      <>\r\n        <div style={style}>\r\n            {cards.map((card, i) => renderCard(card, i))}\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,qBAAqB;AACxC,SAASC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAC7C,SAASC,IAAI,QAAQ,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAChC,MAAMC,KAAK,GAAG;EACZC,KAAK,EAAE;AACT,CAAC;AACD,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B;IACE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,CACjC;MACEY,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE;IACR,CAAC,EACD;MACED,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE;IACR,CAAC,EACD;MACED,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE;IACR,CAAC,EACD;MACED,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE;IACR,CAAC,EACD;MACED,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE;IACR,CAAC,EACD;MACED,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE;IACR,CAAC,EACD;MACED,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE;IACR,CAAC,CACF,CAAC;IACF,MAAMC,QAAQ,GAAGf,WAAW,CAAC,CAACgB,SAAS,EAAEC,UAAU,KAAK;MACtDL,QAAQ,CAAEM,SAAS,IACjBnB,MAAM,CAACmB,SAAS,EAAE;QAChBC,OAAO,EAAE,CACP,CAACH,SAAS,EAAE,CAAC,CAAC,EACd,CAACC,UAAU,EAAE,CAAC,EAAEC,SAAS,CAACF,SAAS,CAAC,CAAC;MAEzC,CAAC,CACH,CAAC;IACH,CAAC,EAAE,EAAE,CAAC;IACN,MAAMI,UAAU,GAAGpB,WAAW,CAAC,CAACqB,IAAI,EAAEC,KAAK,KAAK;MAC9C,oBACElB,OAAA,CAACF,IAAI;QAEHoB,KAAK,EAAEA,KAAM;QACbT,EAAE,EAAEQ,IAAI,CAACR,EAAG;QACZC,IAAI,EAAEO,IAAI,CAACP,IAAK;QAChBC,QAAQ,EAAEA;MAAS,GAJdM,IAAI,CAACR,EAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKb,CAAC;IAEN,CAAC,EAAE,EAAE,CAAC;IACN,oBACEtB,OAAA,CAAAE,SAAA;MAAAqB,QAAA,eACEvB,OAAA;QAAKG,KAAK,EAAEA,KAAM;QAAAoB,QAAA,EACbhB,KAAK,CAACiB,GAAG,CAAC,CAACP,IAAI,EAAEQ,CAAC,KAAKT,UAAU,CAACC,IAAI,EAAEQ,CAAC,CAAC;MAAC;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C;IAAC,gBACN,CAAC;EAEP;AACF,CAAC;AAAAhB,EAAA,CA7DYD,SAAS;AAAAqB,EAAA,GAATrB,SAAS;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}