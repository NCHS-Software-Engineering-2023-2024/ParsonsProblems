{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cmemery\\\\Desktop\\\\parsons-problems\\\\client\\\\src\\\\App.js\";\n// Video4Ever Starter Code\n// Dr. Miller\n// Start your React app using npm start while in the client directory\nimport './App.css';\nimport './index.css';\nimport React, { Component, useState, useEffect } from \"react\";\nimport { render } from 'react-dom';\n\n// You can use this function for sending POST requests You can modify it if you want to use it for GET requests as well\n// This is an asynchronous function meaning that it returns a Promise\n// A Promise means it will either return a valid value or reject the request\n// Promises are important for  operations that take time such as querying a database or fetching data from a server\n// Using await means this function will suspend execution until the Promise resolves so it won't return until it has a response\n// The await keyword only works in asynchronous functions\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function postData(url = \"\", data = {}) {\n  // Default options are marked with *\n  const response = await fetch(url, {\n    method: \"POST\",\n    // *GET, POST, PUT, DELETE, etc.\n    mode: \"cors\",\n    // no-cors, *cors, same-origin\n    cache: \"no-cache\",\n    // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"same-origin\",\n    // include, *same-origin, omit\n    headers: {\n      \"Content-Type\": \"application/json\"\n      // 'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    redirect: \"follow\",\n    // manual, *follow, error\n    referrerPolicy: \"no-referrer\",\n    // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n  });\n  return response.json(); // parses JSON response into native JavaScript objects\n}\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.handleDragStart = (e, item) => {\n      this.setState({\n        draggingItem: item\n      });\n      e.dataTransfer.setData('text/plain', '');\n    };\n    this.handleDragEnd = () => {\n      this.setState({\n        draggingItem: null\n      });\n    };\n    this.handleDragOver = e => {\n      e.preventDefault();\n    };\n    this.handleDrop = (e, targetItem) => {\n      const {\n        draggingItem,\n        items\n      } = this.state;\n      if (!draggingItem) return;\n      const currentIndex = items.indexOf(draggingItem);\n      const targetIndex = items.indexOf(targetItem);\n      if (currentIndex !== -1 && targetIndex !== -1) {\n        items.splice(currentIndex, 1);\n        items.splice(targetIndex, 0, draggingItem);\n        this.setState({\n          items\n        });\n      }\n    };\n    this.handleNameChange = e => {\n      this.setState({\n        newItemName: e.target.value\n      });\n    };\n    this.state = {\n      items: [{\n        id: 1,\n        name: 'first'\n      }, {\n        id: 2,\n        name: 'second'\n      }, {\n        id: 3,\n        name: 'third'\n      }\n      // Add more items here \n      ],\n      draggingItem: null,\n      newItemName: ''\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sortable-list\",\n      children: this.state.items.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `item ${item === this.state.draggingItem ? 'dragging' : ''}`,\n        draggable: \"true\",\n        onDragStart: e => this.handleDragStart(e, item),\n        onDragEnd: this.handleDragEnd,\n        onDragOver: this.handleDragOver,\n        onDrop: e => this.handleDrop(e, item),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 7\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 4\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","useState","useEffect","render","jsxDEV","_jsxDEV","postData","url","data","response","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","json","App","constructor","props","handleDragStart","e","item","setState","draggingItem","dataTransfer","setData","handleDragEnd","handleDragOver","preventDefault","handleDrop","targetItem","items","state","currentIndex","indexOf","targetIndex","splice","handleNameChange","newItemName","target","value","id","name","className","children","map","index","draggable","onDragStart","onDragEnd","onDragOver","onDrop","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/cmemery/Desktop/parsons-problems/client/src/App.js"],"sourcesContent":["// Video4Ever Starter Code\r\n// Dr. Miller\r\n// Start your React app using npm start while in the client directory\r\nimport './App.css';\r\nimport './index.css';\r\nimport React, { Component, useState, useEffect } from \"react\";\r\nimport { render } from 'react-dom';\r\n\r\n// You can use this function for sending POST requests You can modify it if you want to use it for GET requests as well\r\n// This is an asynchronous function meaning that it returns a Promise\r\n// A Promise means it will either return a valid value or reject the request\r\n// Promises are important for  operations that take time such as querying a database or fetching data from a server\r\n// Using await means this function will suspend execution until the Promise resolves so it won't return until it has a response\r\n// The await keyword only works in asynchronous functions\r\nasync function postData(url = \"\", data = {}) {\r\n\t// Default options are marked with *\r\n\tconst response = await fetch(url, {\r\n\t\tmethod: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n\t\tmode: \"cors\", // no-cors, *cors, same-origin\r\n\t\tcache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n\t\tcredentials: \"same-origin\", // include, *same-origin, omit\r\n\t\theaders: {\r\n\t\t\"Content-Type\": \"application/json\",\r\n\t\t// 'Content-Type': 'application/x-www-form-urlencoded',\r\n\t\t},\r\n\t\tredirect: \"follow\", // manual, *follow, error\r\n\t\treferrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n\t\tbody: JSON.stringify(data), // body data type must match \"Content-Type\" header\r\n\t});\r\n\treturn response.json(); // parses JSON response into native JavaScript objects\r\n}\r\n\r\nclass App extends Component { \r\n\tconstructor(props) { \r\n\t\tsuper(props); \r\n\t\tthis.state = { \r\n\t\t\titems: [ \r\n\t\t\t\t{ \r\n\t\t\t\t\tid: 1, \r\n\t\t\t\t\tname: 'first', \r\n\t\t\t\t}, \r\n\t\t\t\t{ \r\n\t\t\t\t\tid: 2, \r\n\t\t\t\t\tname: 'second', \r\n\t\t\t\t}, \r\n\t\t\t\t{ \r\n\t\t\t\t\tid: 3, \r\n\t\t\t\t\tname: 'third',\r\n\t\t\t\t}, \r\n\t\t\t\t// Add more items here \r\n\t\t\t], \r\n\t\t\tdraggingItem: null, \r\n\t\t\tnewItemName: '', \r\n\t\t}; \r\n\t} \r\n\r\n\thandleDragStart = (e, item) => { \r\n\t\tthis.setState({ draggingItem: item }); \r\n\t\te.dataTransfer.setData('text/plain', ''); \r\n\t}; \r\n\r\n\thandleDragEnd = () => { \r\n\t\tthis.setState({ draggingItem: null }); \r\n\t}; \r\n\r\n\thandleDragOver = (e) => { \r\n\t\te.preventDefault(); \r\n\t}; \r\n\r\n\thandleDrop = (e, targetItem) => { \r\n\t\tconst { draggingItem, items } = this.state; \r\n\t\tif (!draggingItem) return; \r\n\r\n\t\tconst currentIndex = items.indexOf(draggingItem); \r\n\t\tconst targetIndex = items.indexOf(targetItem); \r\n\r\n\t\tif (currentIndex !== -1 && targetIndex !== -1) { \r\n\t\t\titems.splice(currentIndex, 1); \r\n\t\t\titems.splice(targetIndex, 0, draggingItem); \r\n\t\t\tthis.setState({ items }); \r\n\t\t} \r\n\t}; \r\n\r\n\thandleNameChange = (e) => { \r\n\t\tthis.setState({ newItemName: e.target.value }); \r\n\t}; \r\n\r\n\trender() { \r\n\t\treturn ( \r\n\t\t\t<div className=\"sortable-list\"> \r\n\t\t\t\t{this.state.items.map((item, index) => ( \r\n\t\t\t\t\t<div \r\n\t\t\t\t\t\tkey={item.id} \r\n\t\t\t\t\t\tclassName= \r\n\t\t\t\t\t\t\t{`item ${item === this.state.draggingItem ? \r\n\t\t\t\t\t\t\t\t'dragging' : ''\r\n\t\t\t\t\t\t\t}`} \r\n\t\t\t\t\t\tdraggable=\"true\"\r\n\t\t\t\t\t\tonDragStart={(e) => \r\n\t\t\t\t\t\t\tthis.handleDragStart(e, item)} \r\n\t\t\t\t\t\tonDragEnd={this.handleDragEnd} \r\n\t\t\t\t\t\tonDragOver={this.handleDragOver} \r\n\t\t\t\t\t\tonDrop={(e) => this.handleDrop(e, item)} \r\n\t\t\t\t\t> \r\n\t\t\t\t\t\t<div className=\"details\"> \r\n\t\t\t\t\t\t\t<span>{item.name}</span> \r\n\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div> \r\n\t\t\t\t))} \r\n\t\t\t</div> \r\n\t\t); \r\n\t} \r\n} \r\n\r\nexport default App;\r\n\r\n"],"mappings":";AAAA;AACA;AACA;AACA,OAAO,WAAW;AAClB,OAAO,aAAa;AACpB,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7D,SAASC,MAAM,QAAQ,WAAW;;AAElC;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,eAAeC,QAAQA,CAACC,GAAG,GAAG,EAAE,EAAEC,IAAI,GAAG,CAAC,CAAC,EAAE;EAC5C;EACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,EAAE;IACjCI,MAAM,EAAE,MAAM;IAAE;IAChBC,IAAI,EAAE,MAAM;IAAE;IACdC,KAAK,EAAE,UAAU;IAAE;IACnBC,WAAW,EAAE,aAAa;IAAE;IAC5BC,OAAO,EAAE;MACT,cAAc,EAAE;MAChB;IACA,CAAC;IACDC,QAAQ,EAAE,QAAQ;IAAE;IACpBC,cAAc,EAAE,aAAa;IAAE;IAC/BC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,IAAI,CAAC,CAAE;EAC7B,CAAC,CAAC;EACF,OAAOC,QAAQ,CAACY,IAAI,CAAC,CAAC,CAAC,CAAC;AACzB;AAEA,MAAMC,GAAG,SAAStB,SAAS,CAAC;EAC3BuB,WAAWA,CAACC,KAAK,EAAE;IAClB,KAAK,CAACA,KAAK,CAAC;IAAC,KAsBdC,eAAe,GAAG,CAACC,CAAC,EAAEC,IAAI,KAAK;MAC9B,IAAI,CAACC,QAAQ,CAAC;QAAEC,YAAY,EAAEF;MAAK,CAAC,CAAC;MACrCD,CAAC,CAACI,YAAY,CAACC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC;IACzC,CAAC;IAAA,KAEDC,aAAa,GAAG,MAAM;MACrB,IAAI,CAACJ,QAAQ,CAAC;QAAEC,YAAY,EAAE;MAAK,CAAC,CAAC;IACtC,CAAC;IAAA,KAEDI,cAAc,GAAIP,CAAC,IAAK;MACvBA,CAAC,CAACQ,cAAc,CAAC,CAAC;IACnB,CAAC;IAAA,KAEDC,UAAU,GAAG,CAACT,CAAC,EAAEU,UAAU,KAAK;MAC/B,MAAM;QAAEP,YAAY;QAAEQ;MAAM,CAAC,GAAG,IAAI,CAACC,KAAK;MAC1C,IAAI,CAACT,YAAY,EAAE;MAEnB,MAAMU,YAAY,GAAGF,KAAK,CAACG,OAAO,CAACX,YAAY,CAAC;MAChD,MAAMY,WAAW,GAAGJ,KAAK,CAACG,OAAO,CAACJ,UAAU,CAAC;MAE7C,IAAIG,YAAY,KAAK,CAAC,CAAC,IAAIE,WAAW,KAAK,CAAC,CAAC,EAAE;QAC9CJ,KAAK,CAACK,MAAM,CAACH,YAAY,EAAE,CAAC,CAAC;QAC7BF,KAAK,CAACK,MAAM,CAACD,WAAW,EAAE,CAAC,EAAEZ,YAAY,CAAC;QAC1C,IAAI,CAACD,QAAQ,CAAC;UAAES;QAAM,CAAC,CAAC;MACzB;IACD,CAAC;IAAA,KAEDM,gBAAgB,GAAIjB,CAAC,IAAK;MACzB,IAAI,CAACE,QAAQ,CAAC;QAAEgB,WAAW,EAAElB,CAAC,CAACmB,MAAM,CAACC;MAAM,CAAC,CAAC;IAC/C,CAAC;IAlDA,IAAI,CAACR,KAAK,GAAG;MACZD,KAAK,EAAE,CACN;QACCU,EAAE,EAAE,CAAC;QACLC,IAAI,EAAE;MACP,CAAC,EACD;QACCD,EAAE,EAAE,CAAC;QACLC,IAAI,EAAE;MACP,CAAC,EACD;QACCD,EAAE,EAAE,CAAC;QACLC,IAAI,EAAE;MACP;MACA;MAAA,CACA;MACDnB,YAAY,EAAE,IAAI;MAClBe,WAAW,EAAE;IACd,CAAC;EACF;EAiCAzC,MAAMA,CAAA,EAAG;IACR,oBACCE,OAAA;MAAK4C,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC5B,IAAI,CAACZ,KAAK,CAACD,KAAK,CAACc,GAAG,CAAC,CAACxB,IAAI,EAAEyB,KAAK,kBACjC/C,OAAA;QAEC4C,SAAS,EACN,QAAOtB,IAAI,KAAK,IAAI,CAACW,KAAK,CAACT,YAAY,GACxC,UAAU,GAAG,EACb,EAAE;QACJwB,SAAS,EAAC,MAAM;QAChBC,WAAW,EAAG5B,CAAC,IACd,IAAI,CAACD,eAAe,CAACC,CAAC,EAAEC,IAAI,CAAE;QAC/B4B,SAAS,EAAE,IAAI,CAACvB,aAAc;QAC9BwB,UAAU,EAAE,IAAI,CAACvB,cAAe;QAChCwB,MAAM,EAAG/B,CAAC,IAAK,IAAI,CAACS,UAAU,CAACT,CAAC,EAAEC,IAAI,CAAE;QAAAuB,QAAA,eAExC7C,OAAA;UAAK4C,SAAS,EAAC,SAAS;UAAAC,QAAA,eACvB7C,OAAA;YAAA6C,QAAA,EAAOvB,IAAI,CAACqB;UAAI;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB;MAAC,GAdDlC,IAAI,CAACoB,EAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAgBR,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAER;AACD;AAEA,eAAevC,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}