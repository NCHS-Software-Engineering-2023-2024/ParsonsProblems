{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sitan\\\\Desktop\\\\Software Engineering\\\\ParsonsProblems\\\\client\\\\src\\\\Fileupload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SingleFileUpload = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleFileChange = e => {\n    setSelectedFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      alert(\"Please first select a file\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n    try {\n      // Replace this URL with your server-side endpoint for handling file uploads\n      const response = await fetch(\"http://localhost:8000/\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (response.ok) {\n        alert(\"File upload is  successfully\");\n      } else {\n        alert(\"Failed to upload the file due to errors\");\n      }\n    } catch (error) {\n      console.error(\"Error while uploading the file:\", error);\n      alert(\"Error occurred while uploading the file\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Single File Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 4\n  }, this);\n};\n_s(SingleFileUpload, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = SingleFileUpload;\nexport default SingleFileUpload;\nvar _c;\n$RefreshReg$(_c, \"SingleFileUpload\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SingleFileUpload","_s","selectedFile","setSelectedFile","handleFileChange","e","target","files","handleUpload","alert","formData","FormData","append","response","fetch","method","body","ok","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sitan/Desktop/Software Engineering/ParsonsProblems/client/src/Fileupload.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nconst SingleFileUpload = () => {\r\n   const [selectedFile, setSelectedFile] = useState(null);\r\n   const handleFileChange = (e) => {\r\n      setSelectedFile(e.target.files[0]);\r\n   };\r\n\r\n   const handleUpload = async () => {\r\n      if (!selectedFile) {\r\n         alert(\"Please first select a file\");\r\n         return;\r\n      }\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"file\", selectedFile);\r\n\r\n      try {\r\n         // Replace this URL with your server-side endpoint for handling file uploads\r\n         const response = await fetch(\"http://localhost:8000/\", {\r\n            method: \"POST\",\r\n            body: formData\r\n         });\r\n\r\n         if (response.ok) {\r\n            alert(\"File upload is  successfully\");\r\n         } else {\r\n            alert(\"Failed to upload the file due to errors\");\r\n         }\r\n      } catch (error) {\r\n         console.error(\"Error while uploading the file:\", error);\r\n         alert(\"Error occurred while uploading the file\");\r\n      }\r\n   };\r\n\r\n   return (\r\n   <div>\r\n      <h2>Single File Upload</h2>\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      <button onClick={handleUpload}>Upload</button>\r\n   </div>\r\n   );\r\n};\r\nexport default SingleFileUpload;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACxC,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAMO,gBAAgB,GAAIC,CAAC,IAAK;IAC7BF,eAAe,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACrC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI,CAACN,YAAY,EAAE;MAChBO,KAAK,CAAC,4BAA4B,CAAC;MACnC;IACH;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEV,YAAY,CAAC;IAErC,IAAI;MACD;MACA,MAAMW,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,EAAE;QACpDC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACT,CAAC,CAAC;MAEF,IAAIG,QAAQ,CAACI,EAAE,EAAE;QACdR,KAAK,CAAC,8BAA8B,CAAC;MACxC,CAAC,MAAM;QACJA,KAAK,CAAC,yCAAyC,CAAC;MACnD;IACH,CAAC,CAAC,OAAOS,KAAK,EAAE;MACbC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACvDT,KAAK,CAAC,yCAAyC,CAAC;IACnD;EACH,CAAC;EAED,oBACAV,OAAA;IAAAqB,QAAA,gBACGrB,OAAA;MAAAqB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BzB,OAAA;MAAO0B,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEtB;IAAiB;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjDzB,OAAA;MAAQ4B,OAAO,EAAEnB,YAAa;MAAAY,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAET,CAAC;AAACvB,EAAA,CAxCID,gBAAgB;AAAA4B,EAAA,GAAhB5B,gBAAgB;AAyCtB,eAAeA,gBAAgB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}