{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\glenn\\\\OneDrive\\\\Desktop\\\\GitHub\\\\parsons-problems\\\\client\\\\src\\\\pop-up.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Modal from 'react-bootstrap/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar selectedFile;\nexport function texttoJSON() {\n  let uploadtext = selectedFile.text();\n  console.log(uploadtext);\n  let json = \"\";\n  let i = 0;\n  while (uploadtext.includes('\\\\')) {\n    //json += '{\"id\": \"'+i+'\", \"name\": \"'+ uploadtext.substring(0, indexOf('\\\\')) + '\"}';\n    //uploadtext = uploadtext.substring(indexOf('\\\\')+2);\n    i++;\n  }\n  return {\n    json\n  };\n}\nexport function PopUp() {\n  _s();\n  //hooks - makes the popup 'appear' \n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const [selectedFile, setSelectedFile] = useState(null);\n  // use selectedFile to access file\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const text = selectedFile.text();\n    console.log(text);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      variant: \"primary\",\n      onClick: handleShow,\n      children: \"Import a Problem\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      backdrop: \"static\",\n      keyboard: false,\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".txt, .java, .py\",\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(PopUp, \"j1cID95sf52ToxjFyO0HI67TdPw=\");\n_c = PopUp;\nvar _c;\n$RefreshReg$(_c, \"PopUp\");","map":{"version":3,"names":["useState","Button","Form","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","selectedFile","texttoJSON","uploadtext","text","console","log","json","i","includes","PopUp","_s","show","setShow","handleClose","handleShow","setSelectedFile","handleFileChange","event","target","files","handleSubmit","preventDefault","children","variant","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onHide","backdrop","keyboard","centered","Header","closeButton","Title","Body","onSubmit","type","accept","onChange","Footer","_c","$RefreshReg$"],"sources":["C:/Users/glenn/OneDrive/Desktop/GitHub/parsons-problems/client/src/pop-up.js"],"sourcesContent":["import { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nvar selectedFile;\r\n\r\nexport function texttoJSON(){\r\n    let uploadtext = selectedFile.text();\r\n    console.log(uploadtext);\r\n    let json = \"\";\r\n    let i = 0;\r\n    while (uploadtext.includes('\\\\')){\r\n      \r\n      //json += '{\"id\": \"'+i+'\", \"name\": \"'+ uploadtext.substring(0, indexOf('\\\\')) + '\"}';\r\n      //uploadtext = uploadtext.substring(indexOf('\\\\')+2);\r\n      i++;\r\n    }\r\nreturn (\r\n  {json}\r\n);\r\n}\r\n\r\nexport function PopUp() {\r\n  //hooks - makes the popup 'appear' \r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  // use selectedFile to access file\r\n  const handleFileChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const text = selectedFile.text();\r\n    console.log(text);\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <button variant=\"primary\" onClick={handleShow}>\r\n        Import a Problem\r\n      </button>\r\n\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        \r\n        centered = {true}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Upload</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <form onSubmit = {handleSubmit}>\r\n            <input type = \"file\" accept = \".txt, .java, .py\" onChange={handleFileChange}/>\r\n            <button type = \"submit\">Upload</button>\r\n          </form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n            \r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}