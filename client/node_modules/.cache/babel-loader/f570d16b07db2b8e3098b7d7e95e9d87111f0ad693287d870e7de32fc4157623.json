{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cmemery\\\\Desktop\\\\parsons-problems\\\\client\\\\src\\\\Card.js\",\n  _s = $RefreshSig$();\nimport { useRef } from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\nimport { ItemTypes } from './ItemTypes.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  border: '1px dashed gray',\n  padding: '0.5rem 1rem',\n  marginBottom: '.5rem',\n  backgroundColor: 'white',\n  cursor: 'move'\n};\nconst moveCard = useCallback((dragIndex, hoverIndex) => {\n  setCards(prevCards => update(prevCards, {\n    $splice: [[dragIndex, 1], [hoverIndex, 0, prevCards[dragIndex]]]\n  }));\n});\nexport const Card = ({\n  id,\n  text,\n  index,\n  moveCard\n}) => {\n  _s();\n  const ref = useRef(null);\n  const [{\n    handlerId\n  }, drop] = useDrop({\n    accept: ItemTypes.CARD,\n    collect(monitor) {\n      return {\n        handlerId: monitor.getHandlerId()\n      };\n    },\n    hover(item, monitor) {\n      var _ref$current;\n      if (!ref.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = index;\n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n      // Determine rectangle on screen\n      const hoverBoundingRect = (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.getBoundingClientRect();\n      // Get vertical middle\n      const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n      // Determine mouse position\n      const clientOffset = monitor.getClientOffset();\n      // Get pixels to the top\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n      // Only perform the move when the mouse has crossed half of the items height\n      // When dragging downwards, only move when the cursor is below 50%\n      // When dragging upwards, only move when the cursor is above 50%\n      // Dragging downwards\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n      // Dragging upwards\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n      // Time to actually perform the action\n      moveCard(dragIndex, hoverIndex);\n      // Note: we're mutating the monitor item here!\n      // Generally it's better to avoid mutations,\n      // but it's good here for the sake of performance\n      // to avoid expensive index searches.\n      item.index = hoverIndex;\n    }\n  });\n  const [{\n    isDragging\n  }, drag] = useDrag({\n    type: ItemTypes.CARD,\n    item: () => {\n      return {\n        id,\n        index\n      };\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n  const opacity = isDragging ? 0 : 1;\n  drag(drop(ref));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    style: {\n      ...style,\n      opacity\n    },\n    \"data-handler-id\": handlerId,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(Card, \"Bm9lse0dSUrMRW3+tCDIsw+uDQ8=\", false, function () {\n  return [useDrop, useDrag];\n});\n_c = Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["useRef","useDrag","useDrop","ItemTypes","jsxDEV","_jsxDEV","style","border","padding","marginBottom","backgroundColor","cursor","moveCard","useCallback","dragIndex","hoverIndex","setCards","prevCards","update","$splice","Card","id","text","index","_s","ref","handlerId","drop","accept","CARD","collect","monitor","getHandlerId","hover","item","_ref$current","current","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","clientOffset","getClientOffset","hoverClientY","y","isDragging","drag","type","opacity","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/cmemery/Desktop/parsons-problems/client/src/Card.js"],"sourcesContent":["import { useRef } from 'react'\r\nimport { useDrag, useDrop } from 'react-dnd'\r\nimport { ItemTypes } from './ItemTypes.js'\r\n\r\nconst style = {\r\n  border: '1px dashed gray',\r\n  padding: '0.5rem 1rem',\r\n  marginBottom: '.5rem',\r\n  backgroundColor: 'white',\r\n  cursor: 'move',\r\n}\r\nconst moveCard = useCallback((dragIndex, hoverIndex) => {\r\n    setCards((prevCards) =>\r\n      update(prevCards, {\r\n        $splice: [\r\n          [dragIndex, 1],\r\n          [hoverIndex, 0, prevCards[dragIndex]],\r\n        ],\r\n      }),\r\n    )})\r\nexport const Card = ({ id, text, index, moveCard }) => {\r\n  const ref = useRef(null)\r\n  const [{ handlerId }, drop] = useDrop({\r\n    accept: ItemTypes.CARD,\r\n    collect(monitor) {\r\n      return {\r\n        handlerId: monitor.getHandlerId(),\r\n      }\r\n    },\r\n    hover(item, monitor) {\r\n      if (!ref.current) {\r\n        return\r\n      }\r\n      const dragIndex = item.index\r\n      const hoverIndex = index\r\n      // Don't replace items with themselves\r\n      if (dragIndex === hoverIndex) {\r\n        return\r\n      }\r\n      // Determine rectangle on screen\r\n      const hoverBoundingRect = ref.current?.getBoundingClientRect()\r\n      // Get vertical middle\r\n      const hoverMiddleY =\r\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\r\n      // Determine mouse position\r\n      const clientOffset = monitor.getClientOffset()\r\n      // Get pixels to the top\r\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top\r\n      // Only perform the move when the mouse has crossed half of the items height\r\n      // When dragging downwards, only move when the cursor is below 50%\r\n      // When dragging upwards, only move when the cursor is above 50%\r\n      // Dragging downwards\r\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n        return\r\n      }\r\n      // Dragging upwards\r\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n        return\r\n      }\r\n      // Time to actually perform the action\r\n      moveCard(dragIndex, hoverIndex)\r\n      // Note: we're mutating the monitor item here!\r\n      // Generally it's better to avoid mutations,\r\n      // but it's good here for the sake of performance\r\n      // to avoid expensive index searches.\r\n      item.index = hoverIndex\r\n    },\r\n  })\r\n  const [{ isDragging }, drag] = useDrag({\r\n    type: ItemTypes.CARD,\r\n    item: () => {\r\n      return { id, index }\r\n    },\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n  });\r\n  const opacity = isDragging ? 0 : 1;\r\n  drag(drop(ref));\r\n  return (\r\n    <div ref={ref} style={{ ...style, opacity }} data-handler-id={handlerId}>\r\n      {text}\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}