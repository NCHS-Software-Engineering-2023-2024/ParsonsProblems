{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ajbukowski\\\\aryanp\\\\parsons-problems\\\\client\\\\src\\\\filecomponent.js\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport { FileProvider, fileContext } from './fileContext.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function UploadComponent() {\n  _s();\n  //hooks - makes the popup 'appear' \n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const {\n    file,\n    setFile\n  } = useContext(fileContext); // to update dnd-container's file without sending props\n\n  const [content, setContent] = useState(\"\");\n  const handleFileChange = event => {\n    if (event.target.files[0].name.slice(-4) !== \".txt\" || event.target.files[0].name.slice(-5) !== \".java\" || event.target.files[0].name.slice(-3) !== \".py\") {\n      alert(\"The file type you selected is not supported.\");\n    } else {\n      const reader = new FileReader();\n      reader.onload = function () {\n        //console.log(reader.result);\n        setContent(reader.result); // to parse outside of handleFileChange\n      };\n    }\n  };\n  var json = [];\n  var count = 0;\n  // file contents need to be added to an array for dnd\n  for (const line of content.split(\"\\n\")) {\n    if (line.includes(\"\\r\")) {\n      var str = line.substring(0, line.indexOf(\"\\r\"));\n      if (str.length !== 0) {\n        // doesn't add lines that only contain \\r \n        json.push({\n          id: count,\n          name: str,\n          positionx: null,\n          positiony: null\n        });\n        count++;\n      }\n    } else if (line.length !== 0) {\n      json.push({\n        id: count,\n        name: line,\n        positionx: null,\n        positiony: null\n      });\n      count++;\n    }\n  }\n\n  // only sets the file when submit button is clicked to limit rerenders\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setFile(json);\n    try {\n      const res = await fetch(\"\", {\n        // change url to send to different place\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: {}\n      });\n      console.log(res.ok);\n    } catch (error) {\n      console.error('upload error');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"button\",\n      onClick: handleShow,\n      children: \"Import a Problem\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      backdrop: \"static\",\n      keyboard: false,\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Save a problem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(FileProvider, {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \".txt, .java, .py\",\n                id: \"problem\",\n                onChange: handleFileChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"comments\",\n                children: \"Comments\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                id: \"comments\",\n                rows: \"2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(UploadComponent, \"qVHE6nRJ8UzQZkGYG4HHzQj4tgw=\");\n_c = UploadComponent;\nvar _c;\n$RefreshReg$(_c, \"UploadComponent\");","map":{"version":3,"names":["useContext","useState","Button","Modal","FileProvider","fileContext","jsxDEV","_jsxDEV","Fragment","_Fragment","UploadComponent","_s","show","setShow","handleClose","handleShow","file","setFile","content","setContent","handleFileChange","event","target","files","name","slice","alert","reader","FileReader","onload","result","json","count","line","split","includes","str","substring","indexOf","length","push","id","positionx","positiony","handleSubmit","preventDefault","res","fetch","method","headers","body","console","log","ok","error","children","class","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onHide","backdrop","keyboard","centered","Header","closeButton","Title","Body","onSubmit","type","accept","onChange","for","rows","Footer","variant","_c","$RefreshReg$"],"sources":["C:/Users/ajbukowski/aryanp/parsons-problems/client/src/filecomponent.js"],"sourcesContent":["import { useContext, useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { FileProvider, fileContext } from './fileContext.js';\r\n\r\nexport function UploadComponent() {\r\n  //hooks - makes the popup 'appear' \r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const {file, setFile} = useContext(fileContext);// to update dnd-container's file without sending props\r\n    \r\n  const [content, setContent] = useState(\"\");\r\n  const handleFileChange = (event) => {\r\n    if (event.target.files[0].name.slice(-4) !== \".txt\" ||\r\n        event.target.files[0].name.slice(-5) !== \".java\" ||\r\n        event.target.files[0].name.slice(-3) !== \".py\"){\r\n          alert(\"The file type you selected is not supported.\");\r\n        }\r\n    else {\r\n        const reader = new FileReader();\r\n      reader.onload = function() {\r\n          //console.log(reader.result);\r\n          setContent(reader.result); // to parse outside of handleFileChange\r\n      }\r\n      \r\n        }\r\n    }\r\n    \r\n\r\n  var json = [];\r\n  var count = 0;\r\n  // file contents need to be added to an array for dnd\r\n  for (const line of content.split(\"\\n\")){\r\n      if (line.includes(\"\\r\")){\r\n        var str = line.substring(0, line.indexOf(\"\\r\"));\r\n        if (str.length !== 0){ // doesn't add lines that only contain \\r \r\n          json.push({id: count, name: str, positionx: null, positiony: null})\r\n          count++;\r\n        }\r\n      }\r\n      else if (line.length !== 0 ){ \r\n           json.push({id: count, name: line, positionx: null, positiony: null });\r\n           count++;\r\n      }\r\n  }\r\n  \r\n  // only sets the file when submit button is clicked to limit rerenders\r\n  const handleSubmit = async (event) => {\r\n      event.preventDefault();\r\n      setFile(json);\r\n      \r\n            \r\n    try {\r\n        const res = await fetch(\"\", {// change url to send to different place\r\n            method: 'PUT',\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: {\r\n                \r\n            }\r\n                \r\n        });\r\n            \r\n        console.log(res.ok);\r\n    }\r\n        catch (error){\r\n            console.error('upload error');\r\n        }\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n      <button class = \"button\" onClick={handleShow}>\r\n        Import a Problem\r\n      </button>\r\n\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        centered = {true}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Save a problem</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <FileProvider>\r\n              <form onSubmit = {handleSubmit}>\r\n                <div>\r\n                    <input type = \"file\" accept = \".txt, .java, .py\" id = \"problem\" onChange = {handleFileChange}/>  \r\n                </div>\r\n                <div>\r\n                    <label for = \"comments\">Comments</label>\r\n                    <textarea id = \"comments\" rows = \"2\"></textarea>\r\n                    <input type = \"submit\"></input>\r\n                </div>    \r\n\r\n              </form>\r\n            </FileProvider>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}