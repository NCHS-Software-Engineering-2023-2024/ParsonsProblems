{"ast":null,"code":"var _jsxFileName = \"/workspaces/parsons-problems/client/src/dnd-container.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const DndContainer = () => {\n  _s();\n  const [items, setItems] = useState([{\n    id: 1,\n    name: 'first'\n  }, {\n    id: 2,\n    name: 'second'\n  }, {\n    id: 3,\n    name: 'third'\n  }]);\n  const [draggingItem, setDraggingItem] = useState(null);\n  const handleDragStart = (e, item) => {\n    setDraggingItem(item);\n    e.dataTransfer.setData('text/plain', '');\n  };\n  const handleDragEnd = () => {\n    setDraggingItem(null);\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n  const handleDrop = (e, targetItem) => {\n    if (!draggingItem) return;\n    const currentIndex = items.indexOf(draggingItem);\n    const targetIndex = items.indexOf(targetItem);\n    if (currentIndex !== -1 && targetIndex !== -1) {\n      items.splice(currentIndex, 1);\n      items.splice(targetIndex, 0, draggingItem);\n      setItems(items);\n    }\n  };\n  const moveItem = useCallback((dragIndex, hoverIndex) => {\n    setCards(prevCards => update(prevCards, {\n      $splice: [[dragIndex, 1], [hoverIndex, 0, prevCards[dragIndex]]]\n    }));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sortable-list\",\n      children: items.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `item ${item === draggingItem ? 'dragging' : ''}`,\n        draggable: \"true\",\n        onDragStart: e => handleDragStart(e, item),\n        onDragEnd: handleDragEnd,\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, item),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(DndContainer, \"j8BF9Fk8bZt3SK1n7pUkQv2MlGM=\");\n_c = DndContainer;\nexport default DndContainer;\nvar _c;\n$RefreshReg$(_c, \"DndContainer\");","map":{"version":3,"names":["React","useState","useCallback","jsxDEV","_jsxDEV","Fragment","_Fragment","DndContainer","_s","items","setItems","id","name","draggingItem","setDraggingItem","handleDragStart","e","item","dataTransfer","setData","handleDragEnd","handleDragOver","preventDefault","handleDrop","targetItem","currentIndex","indexOf","targetIndex","splice","moveItem","dragIndex","hoverIndex","setCards","prevCards","update","$splice","children","className","map","index","draggable","onDragStart","onDragEnd","onDragOver","onDrop","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspaces/parsons-problems/client/src/dnd-container.js"],"sourcesContent":["import React, { useState, useCallback } from \"react\";\n\n\nexport const DndContainer = () => {\n    const [items, setItems] = useState([\n        {\n            id: 1,\n            name: 'first',\n        },\n        {\n            id: 2,\n            name: 'second',\n        },\n        {\n            id: 3,\n            name: 'third',\n        },\n    ]);\n    const [draggingItem, setDraggingItem] = useState(null);\n\n    const handleDragStart = (e, item) => {\n        setDraggingItem(item);\n        e.dataTransfer.setData('text/plain', '');\n    };\n\n    const handleDragEnd = () => {\n        setDraggingItem(null);\n    };\n\n    const handleDragOver = (e) => {\n        e.preventDefault();\n    };\n\n    const handleDrop = (e, targetItem) => {\n        if (!draggingItem) return;\n\n        const currentIndex = items.indexOf(draggingItem);\n        const targetIndex = items.indexOf(targetItem);\n\n        if (currentIndex !== -1 && targetIndex !== -1) {\n            items.splice(currentIndex, 1);\n            items.splice(targetIndex, 0, draggingItem);\n            setItems(items);\n        }\n    };\n    const moveItem = useCallback((dragIndex, hoverIndex) => {\n        setCards((prevCards) =>\n          update(prevCards, {\n            $splice: [\n              [dragIndex, 1],\n              [hoverIndex, 0, prevCards[dragIndex]],\n            ],\n          })\n        );\n      }, []);\n\n    return (\n        <>\n            <div className=\"sortable-list\">\n                {items.map((item, index) => (\n                    <div\n                        key={item.id}\n                        className=\n                        {`item ${item === draggingItem ?\n                            'dragging' : ''\n                            }`}\n                        draggable=\"true\"\n                        onDragStart={(e) =>\n                            handleDragStart(e, item)}\n                        onDragEnd={handleDragEnd}\n                        onDragOver={handleDragOver}\n                        onDrop={(e) => handleDrop(e, item)}\n                    >\n                        <div className=\"details\">\n                            <span>{item.name}</span>\n                        </div>\n\n                    </div>\n                ))}\n            </div>\n        </>\n    );\n}\nexport default DndContainer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}