{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cmemery\\\\Desktop\\\\parsons-problems\\\\client\\\\src\\\\dnd-container.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass DndContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.handleDragStart = (e, item) => {\n      this.setState({\n        draggingItem: item\n      });\n      e.dataTransfer.setData('text/plain', '');\n    };\n    this.handleDragEnd = () => {\n      this.setState({\n        draggingItem: null\n      });\n    };\n    this.handleDragOver = e => {\n      e.preventDefault();\n    };\n    this.handleDrop = (e, targetItem) => {\n      const {\n        draggingItem,\n        items\n      } = this.state;\n      if (!draggingItem) return;\n      const currentIndex = items.indexOf(draggingItem);\n      const targetIndex = items.indexOf(targetItem);\n      if (currentIndex !== -1 && targetIndex !== -1) {\n        items.splice(currentIndex, 1);\n        items.splice(targetIndex, 0, draggingItem);\n        this.setState({\n          items\n        });\n      }\n    };\n    this.handleNameChange = e => {\n      this.setState({\n        newItemName: e.target.value\n      });\n    };\n    this.state = {\n      items: [{\n        id: 1,\n        name: 'first'\n      }, {\n        id: 2,\n        name: 'second'\n      }, {\n        id: 3,\n        name: 'third'\n      }\n      // Add more items here \n      ],\n      draggingItem: null,\n      newItemName: ''\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sortable-list\",\n      children: this.state.items.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `item ${item === this.state.draggingItem ? 'dragging' : ''}`,\n        draggable: \"true\",\n        onDragStart: e => this.handleDragStart(e, item),\n        onDragEnd: this.handleDragEnd,\n        onDragOver: this.handleDragOver,\n        onDrop: e => this.handleDrop(e, item),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }, this);\n  }\n}\nexport default DndContainer;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","DndContainer","constructor","props","handleDragStart","e","item","setState","draggingItem","dataTransfer","setData","handleDragEnd","handleDragOver","preventDefault","handleDrop","targetItem","items","state","currentIndex","indexOf","targetIndex","splice","handleNameChange","newItemName","target","value","id","name","render","className","children","map","index","draggable","onDragStart","onDragEnd","onDragOver","onDrop","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/cmemery/Desktop/parsons-problems/client/src/dnd-container.js"],"sourcesContent":["\r\nimport React, { Component } from \"react\";\r\n\r\nclass DndContainer extends Component { \r\n\tconstructor(props) { \r\n\t\tsuper(props); \r\n\t\tthis.state = { \r\n\t\t\titems: [ \r\n\t\t\t\t{ \r\n\t\t\t\t\tid: 1, \r\n\t\t\t\t\tname: 'first', \r\n\t\t\t\t}, \r\n\t\t\t\t{ \r\n\t\t\t\t\tid: 2, \r\n\t\t\t\t\tname: 'second', \r\n\t\t\t\t}, \r\n\t\t\t\t{ \r\n\t\t\t\t\tid: 3, \r\n\t\t\t\t\tname: 'third',\r\n\t\t\t\t}, \r\n\t\t\t\t// Add more items here \r\n\t\t\t], \r\n\t\t\tdraggingItem: null, \r\n\t\t\tnewItemName: '', \r\n\t\t}; \r\n\t} \r\n\r\n\thandleDragStart = (e, item) => { \r\n\t\tthis.setState({ draggingItem: item }); \r\n\t\te.dataTransfer.setData('text/plain', ''); \r\n\t}; \r\n\r\n\thandleDragEnd = () => { \r\n\t\tthis.setState({ draggingItem: null }); \r\n\t}; \r\n\r\n\thandleDragOver = (e) => { \r\n\t\te.preventDefault(); \r\n\t}; \r\n\r\n\thandleDrop = (e, targetItem) => { \r\n\t\tconst { draggingItem, items } = this.state; \r\n\t\tif (!draggingItem) return; \r\n\r\n\t\tconst currentIndex = items.indexOf(draggingItem); \r\n\t\tconst targetIndex = items.indexOf(targetItem); \r\n\r\n\t\tif (currentIndex !== -1 && targetIndex !== -1) { \r\n\t\t\titems.splice(currentIndex, 1); \r\n\t\t\titems.splice(targetIndex, 0, draggingItem); \r\n\t\t\tthis.setState({ items }); \r\n\t\t} \r\n\t}; \r\n\r\n\thandleNameChange = (e) => { \r\n\t\tthis.setState({ newItemName: e.target.value }); \r\n\t}; \r\n\r\n\trender() { \r\n\t\treturn ( \r\n\r\n          <div className=\"sortable-list\"> \r\n            {this.state.items.map((item, index) => ( \r\n              <div \r\n                key={item.id} \r\n                className= \r\n                  {`item ${item === this.state.draggingItem ? \r\n                    'dragging' : ''\r\n                  }`} \r\n                draggable=\"true\"\r\n                onDragStart={(e) => \r\n                  this.handleDragStart(e, item)} \r\n                onDragEnd={this.handleDragEnd} \r\n                onDragOver={this.handleDragOver} \r\n                onDrop={(e) => this.handleDrop(e, item)} \r\n              > \r\n                <div className=\"details\"> \r\n                  <span>{item.name}</span> \r\n                </div> \r\n                \r\n              </div> \r\n            ))} \r\n          </div> \r\n\t\t); \r\n\t} \r\n}\r\nexport default DndContainer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}