{"ast":null,"code":"var _jsxFileName = \"/workspaces/parsons-problems/client/src/dnd-container.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { DndContext, KeyboardSensor, PointerSensor, useSensor, useSensors } from \"@dnd-kit/core\";\nimport \"./index.css\";\nimport { SortableContext, arrayMove, sortableKeyboardCoordinates, useSortable } from \"@dnd-kit/sortable\";\nimport { CSS } from \"@dnd-kit/utilities\";\nimport React, { useEffect, useState } from \"react\";\nimport { fileContext } from \"./fileContext.js\";\nimport { snapGridModifier } from \"./snapGridModifier.ts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SortableItem(props) {\n  _s();\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition\n  } = useSortable({\n    id: props.id\n  });\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"item\",\n    ref: setNodeRef,\n    style: style,\n    ...attributes,\n    ...listeners,\n    children: props.id.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(SortableItem, \"+2L8crjQJ00chYdwZr8GQC241GI=\", false, function () {\n  return [useSortable];\n});\n_c = SortableItem;\nexport const DndContainer = () => {\n  _s2();\n  const {\n    file,\n    setFile\n  } = React.useContext(fileContext);\n  const [items, setitems] = useState(file);\n  useEffect(() => setitems(file), [file]);\n  const sensors = useSensors(useSensor(PointerSensor), useSensor(KeyboardSensor, {\n    coordinateGetter: sortableKeyboardCoordinates\n  }));\n  const [activeId, setActiveId] = useState(null);\n  function handleDragStart(event) {\n    setActiveId(event.active.id);\n  }\n  function handleDragOver(event, targetItem) {\n    const {\n      active,\n      over\n    } = event;\n    if (activeId !== over.id) {\n      setitems(items => {\n        const oldIndex = items.indexOf(activeId);\n        const newIndex = items.indexOf(over.id);\n        return arrayMove(items, oldIndex, newIndex);\n      });\n    }\n  }\n  ;\n  function handleGrade() {\n    setGrade(Grade(items));\n  }\n  function resetGrade() {\n    setGrade(new Array(\"white\"));\n  }\n  function handleShuffle() {\n    setItems(Shuffle(items));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sortable-list\",\n      children: /*#__PURE__*/_jsxDEV(DndContext, {\n        sensors: sensors,\n        onDragOver: handleDragOver,\n        onDragStart: handleDragStart,\n        modifiers: [snapGridModifier],\n        children: /*#__PURE__*/_jsxDEV(SortableContext, {\n          items: items,\n          children: items.map((item, index) => /*#__PURE__*/_jsxDEV(SortableItem, {\n            id: item,\n            fuck: index,\n            grade: grade[item.id]\n          }, item, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-md-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"button\",\n            onClick: handleShuffle,\n            children: \"Shuffle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-md-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"button\",\n            onClick: handleGrade,\n            children: \"Check\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s2(DndContainer, \"SPgcSeDdbkEssNxPd9aBZMn7ryU=\", false, function () {\n  return [useSensors, useSensor, useSensor];\n});\n_c2 = DndContainer;\nexport default DndContainer;\nvar _c, _c2;\n$RefreshReg$(_c, \"SortableItem\");\n$RefreshReg$(_c2, \"DndContainer\");","map":{"version":3,"names":["DndContext","KeyboardSensor","PointerSensor","useSensor","useSensors","SortableContext","arrayMove","sortableKeyboardCoordinates","useSortable","CSS","React","useEffect","useState","fileContext","snapGridModifier","jsxDEV","_jsxDEV","Fragment","_Fragment","SortableItem","props","_s","attributes","listeners","setNodeRef","transform","transition","id","style","Transform","toString","className","ref","children","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","DndContainer","_s2","file","setFile","useContext","items","setitems","sensors","coordinateGetter","activeId","setActiveId","handleDragStart","event","active","handleDragOver","targetItem","over","oldIndex","indexOf","newIndex","handleGrade","setGrade","Grade","resetGrade","Array","handleShuffle","setItems","Shuffle","onDragOver","onDragStart","modifiers","map","item","index","fuck","grade","class","onClick","_c2","$RefreshReg$"],"sources":["/workspaces/parsons-problems/client/src/dnd-container.js"],"sourcesContent":["import {\n  DndContext,\n  KeyboardSensor,\n  PointerSensor,\n  useSensor,\n  useSensors\n} from \"@dnd-kit/core\";\nimport \"./index.css\";\n\nimport {\n  SortableContext,\n  arrayMove,\n  sortableKeyboardCoordinates,\n  useSortable\n} from \"@dnd-kit/sortable\";\nimport { CSS } from \"@dnd-kit/utilities\";\nimport React, { useEffect, useState } from \"react\";\nimport { fileContext } from \"./fileContext.js\";\nimport { snapGridModifier } from \"./snapGridModifier.ts\";\n\nfunction SortableItem(props) {\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition\n  } = useSortable({ id: props.id });\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition\n  };\n\n  return (\n    <div\n      className=\"item\"\n      ref={setNodeRef}\n      style={style}\n      {...attributes}\n      {...listeners}\n    >\n      {props.id.name}\n    </div>\n  );\n}\nexport const DndContainer = () => {\n  const {file, setFile} = React.useContext(fileContext);\n  const [items, setitems] = useState(file);\n  \n  useEffect(() => setitems(file), [file]);\n  const sensors = useSensors(\n    useSensor(PointerSensor),\n    useSensor(KeyboardSensor, {\n      coordinateGetter: sortableKeyboardCoordinates\n    })\n  );\n  \n  const [activeId, setActiveId] = useState(null);\n\n  function handleDragStart(event) {\n    setActiveId(event.active.id);\n  }\n  function handleDragOver(event, targetItem) {\n\n    const { active, over } = event;\n\n    if (activeId !== over.id) {\n      setitems((items) => {\n        const oldIndex = items.indexOf(activeId);\n        const newIndex = items.indexOf(over.id);\n\n        return arrayMove(items, oldIndex, newIndex);\n      });\n    }\n  };\n\n  function handleGrade() {\n    setGrade(Grade(items));\n  }\n  function resetGrade() {\n    setGrade(new Array(\"white\"));\n  }\n\n  function handleShuffle() {\n    setItems(Shuffle(items))\n  }\n\n  return (\n    <>\n      <div className=\"sortable-list\">\n          <DndContext\n            sensors={sensors}\n            onDragOver={handleDragOver}\n            onDragStart={handleDragStart}\n            modifiers={[snapGridModifier]}\n            \n          >\n              <SortableContext\n                items={items}\n              >\n                {items.map((item, index) => (\n                  <SortableItem \n                    key={item} \n                    id={item}\n                    fuck={index}\n                    grade={grade[item.id]}\n                  />\n                ))}\n              </SortableContext>\n\n          </DndContext>\n          \n      </div>\n\n      <div class = \"container text-center\">\n      <div class=\"row mt-3\">\n          <div class=\"col-md-2\">\n            <button \n              class = \"button\"\n              onClick = {handleShuffle}\n            >\n              Shuffle\n            </button>\n          </div>\n          <div class=\"col-md-2\">\n            <button \n              class = \"button\"\n              onClick = {handleGrade}\n            >\n              Check\n            </button>\n          </div>\n      </div>\n      </div>\n    </>\n  );\n\n}\nexport default DndContainer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}