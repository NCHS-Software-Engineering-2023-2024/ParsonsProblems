{"ast":null,"code":"//randomize an array of elements\nexport const Shuffle = items => {\n  var array = items.slice(0);\n  let len = items.length;\n  for (let currentIndex = len - 1; currentIndex > 0; currentIndex--) {\n    let randIndex = Math.floor(Math.random() * (currentIndex + 1));\n    var temp = array[currentIndex];\n    array[currentIndex] = array[randIndex];\n    array[randIndex] = temp;\n  }\n  return array;\n};\n\n//check if the array of elements has chronological ids\n//implement a better algorithm later.\n_c = Shuffle;\nexport const Grade = items => {\n  const grades = items.slice(0);\n  for (let currentIndex = 1; currentIndex <= items.length; currentIndex++) {\n    grades[currentIndex] = items[currentIndex].id - 1 == currentIndex ? \"#aaffaa\" : \"#ffaaaa\";\n  }\n  return grades;\n};\n_c2 = Grade;\nvar _c, _c2;\n$RefreshReg$(_c, \"Shuffle\");\n$RefreshReg$(_c2, \"Grade\");","map":{"version":3,"names":["Shuffle","items","array","slice","len","length","currentIndex","randIndex","Math","floor","random","temp","_c","Grade","grades","id","_c2","$RefreshReg$"],"sources":["/workspaces/parsons-problems/client/src/dnd-grading.js"],"sourcesContent":["\n//randomize an array of elements\nexport const Shuffle = (items) => {\n  var array = items.slice(0);  \n  let len = items.length;\n\n  for (let currentIndex = len - 1; currentIndex > 0; currentIndex--) {\n    let randIndex = Math.floor(Math.random() * (currentIndex + 1) );\n    var temp = array[currentIndex];\n    array[currentIndex] = array[randIndex];\n    array[randIndex] = temp;\n  }\n  return(\n    array\n  );\n}\n\n//check if the array of elements has chronological ids\n//implement a better algorithm later.\nexport const Grade = (items) => {\n  const grades = items.slice(0);\n  for (let currentIndex = 1; currentIndex <= items.length; currentIndex++) {\n    grades[currentIndex] = (items[currentIndex].id - 1 == currentIndex) ? \"#aaffaa\" : \"#ffaaaa\";\n  }\n  return grades;\n}"],"mappings":"AACA;AACA,OAAO,MAAMA,OAAO,GAAIC,KAAK,IAAK;EAChC,IAAIC,KAAK,GAAGD,KAAK,CAACE,KAAK,CAAC,CAAC,CAAC;EAC1B,IAAIC,GAAG,GAAGH,KAAK,CAACI,MAAM;EAEtB,KAAK,IAAIC,YAAY,GAAGF,GAAG,GAAG,CAAC,EAAEE,YAAY,GAAG,CAAC,EAAEA,YAAY,EAAE,EAAE;IACjE,IAAIC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIJ,YAAY,GAAG,CAAC,CAAE,CAAC;IAC/D,IAAIK,IAAI,GAAGT,KAAK,CAACI,YAAY,CAAC;IAC9BJ,KAAK,CAACI,YAAY,CAAC,GAAGJ,KAAK,CAACK,SAAS,CAAC;IACtCL,KAAK,CAACK,SAAS,CAAC,GAAGI,IAAI;EACzB;EACA,OACET,KAAK;AAET,CAAC;;AAED;AACA;AAAAU,EAAA,GAhBaZ,OAAO;AAiBpB,OAAO,MAAMa,KAAK,GAAIZ,KAAK,IAAK;EAC9B,MAAMa,MAAM,GAAGb,KAAK,CAACE,KAAK,CAAC,CAAC,CAAC;EAC7B,KAAK,IAAIG,YAAY,GAAG,CAAC,EAAEA,YAAY,IAAIL,KAAK,CAACI,MAAM,EAAEC,YAAY,EAAE,EAAE;IACvEQ,MAAM,CAACR,YAAY,CAAC,GAAIL,KAAK,CAACK,YAAY,CAAC,CAACS,EAAE,GAAG,CAAC,IAAIT,YAAY,GAAI,SAAS,GAAG,SAAS;EAC7F;EACA,OAAOQ,MAAM;AACf,CAAC;AAAAE,GAAA,GANYH,KAAK;AAAA,IAAAD,EAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}