{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cmemery\\\\Desktop\\\\parsons-problems\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// Video4Ever Starter Code\n// Dr. Miller\n// Start your React app using npm start while in the client directory\nimport interact from 'interactjs';\nimport './App.css';\nimport React, { useState, useEffect } from \"react\";\n\n// You can use this function for sending POST requests You can modify it if you want to use it for GET requests as well\n// This is an asynchronous function meaning that it returns a Promise\n// A Promise means it will either return a valid value or reject the request\n// Promises are important for  operations that take time such as querying a database or fetching data from a server\n// Using await means this function will suspend execution until the Promise resolves so it won't return until it has a response\n// The await keyword only works in asynchronous functions\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function postData(url = \"\", data = {}) {\n  // Default options are marked with *\n  const response = await fetch(url, {\n    method: \"POST\",\n    // *GET, POST, PUT, DELETE, etc.\n    mode: \"cors\",\n    // no-cors, *cors, same-origin\n    cache: \"no-cache\",\n    // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"same-origin\",\n    // include, *same-origin, omit\n    headers: {\n      \"Content-Type\": \"application/json\"\n      // 'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    redirect: \"follow\",\n    // manual, *follow, error\n    referrerPolicy: \"no-referrer\",\n    // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n  });\n  return response.json(); // parses JSON response into native JavaScript objects\n}\n/* */\n// target elements with the \"draggable\" class\ninteract('.draggable').draggable({\n  // keep the element within the area of it's parent\n  modifiers: [interact.modifiers.snap({\n    targets: [interact.snappers.grid({\n      x: 60,\n      y: 30\n    })],\n    range: Infinity,\n    relativePoints: [{\n      x: 0,\n      y: 0\n    }]\n  }), interact.modifiers.restrict({\n    restriction: 'parent',\n    elementRect: {\n      top: 0,\n      left: .5,\n      bottom: 0,\n      right: .5\n    },\n    endOnly: true\n  })],\n  listeners: {\n    // call this function on every dragmove event\n    move: dragMoveListener\n\n    //changes element text to \"element moved xyz pixels idk\"\n    // call this function on every dragend event\n    //end (event) {\n    /*\r\n    var textEl = event.target.querySelector('p')\r\n      textEl && (textEl.textContent =\r\n      'moved a distance of ' +\r\n      (Math.sqrt(Math.pow(event.pageX - event.x0, 2) +\r\n                 Math.pow(event.pageY - event.y0, 2) | 0))\r\n        .toFixed(2) + 'px')\r\n        */\n    //}\n  }\n}).resizable({\n  // resize from all edges and corners\n  edges: {\n    left: true,\n    right: true,\n    bottom: true,\n    top: true\n  },\n  listeners: {\n    move(event) {\n      var target = event.target;\n      var x = parseFloat(target.getAttribute('data-x')) || 0;\n      var y = parseFloat(target.getAttribute('data-y')) || 0;\n\n      // update the element's style\n      target.style.width = event.rect.width + 'px';\n      target.style.height = event.rect.height + 'px';\n\n      // translate when resizing from top or left edges\n      x += event.deltaRect.left;\n      y += event.deltaRect.top;\n      target.style.transform = 'translate(' + x + 'px,' + y + 'px)';\n      target.setAttribute('data-x', x);\n      target.setAttribute('data-y', y);\n      target.textContent = Math.round(event.rect.width) + '\\u00D7' + Math.round(event.rect.height);\n    }\n  },\n  modifiers: [\n  // keep the edges inside the parent\n  interact.modifiers.restrictEdges({\n    outer: 'parent'\n  }),\n  // minimum size\n  interact.modifiers.restrictSize({\n    min: {\n      width: 100,\n      height: 50\n    }\n  })],\n  inertia: true\n});\nfunction dragMoveListener(event) {\n  var target = event.target;\n  // keep the dragged position in the data-x/data-y attributes\n  var x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx;\n  var y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy;\n\n  // translate the element\n  target.style.transform = 'translate(' + x + 'px, ' + y + 'px)';\n\n  // update the posiion attributes\n  target.setAttribute('data-x', x);\n  target.setAttribute('data-y', y);\n}\n// this function is used later in the resizing and gesture demos\nwindow.dragMoveListener = dragMoveListener;\ninteract('.dropzone').dropzone({\n  // only accept elements matching this CSS selector\n  accept: '#yes-drop',\n  // Require a 75% element overlap for a drop to be possible\n  overlap: 0.75,\n  // listen for drop related events:\n\n  ondropactivate: function (event) {\n    // add active dropzone feedback\n    event.target.classList.add('drop-active');\n  },\n  ondragenter: function (event) {\n    var draggableElement = event.relatedTarget;\n    var dropzoneElement = event.target;\n\n    // feedback the possibility of a drop\n    dropzoneElement.classList.add('drop-target');\n    draggableElement.classList.add('can-drop');\n    draggableElement.textContent = 'Dragged in';\n  },\n  ondragleave: function (event) {\n    // remove the drop feedback style\n    event.target.classList.remove('drop-target');\n    event.relatedTarget.classList.remove('can-drop');\n    event.relatedTarget.textContent = 'Dragged out';\n  },\n  ondrop: function (event) {\n    event.relatedTarget.textContent = 'Dropped';\n  },\n  ondropdeactivate: function (event) {\n    // remove active dropzone feedback\n    event.target.classList.remove('drop-active');\n    event.target.classList.remove('drop-target');\n  }\n});\nfunction App() {\n  _s();\n  // Use this variable whenever you want to connect to the Node.js server\n  // When you create production version of a React app, this address will change\n  const baseURL = \"http://localhost:8000/\";\n\n  // This is an example variable (message) that can be changed with the setMessage function\n  // The initial state of the message is an empty string. When the variable is changed, it changes everywhere it is used.\n  // This is referred to as a state hook\n  const [message, setMessage] = useState(\"\");\n\n  // useEffect will run when the app loads\n  // This is referred to as an effect hook\n  // This effect will modify the message based on what is returned from a GET request to the server's message \n  useEffect(() => {\n    fetch(`${baseURL}message`).then(res => res.json()).then(data => {\n      setMessage(data.message);\n    });\n  }, []);\n  const textboxes = [{\n    \"order\": \"1\",\n    \"content\": \"asdf1\"\n  }, {\n    \"order\": \"2\",\n    \"content\": \"asdf2\"\n  }, {\n    \"order\": \"3\",\n    \"content\": \"asdf3\"\n  }];\n  // The message variable is displayed below and will update, if necessary\n  // You can put any Javascript (JSX) code within curly brackets in a React app\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"test-box\",\n        children: textboxes.map(box => /*#__PURE__*/React.createElement('div', {\n          id: \"drag-\" + box.order,\n          class: \"draggable\"\n        }, box.content))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"drag-1\",\n        class: \"dropzone\",\n        children: \"#inner-dropzone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ClLa+zvPL6vd0LAuHSvav3BaFBg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["interact","React","useState","useEffect","jsxDEV","_jsxDEV","postData","url","data","response","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","json","draggable","modifiers","snap","targets","snappers","grid","x","y","range","Infinity","relativePoints","restrict","restriction","elementRect","top","left","bottom","right","endOnly","listeners","move","dragMoveListener","resizable","edges","event","target","parseFloat","getAttribute","style","width","rect","height","deltaRect","transform","setAttribute","textContent","Math","round","restrictEdges","outer","restrictSize","min","inertia","dx","dy","window","dropzone","accept","overlap","ondropactivate","classList","add","ondragenter","draggableElement","relatedTarget","dropzoneElement","ondragleave","remove","ondrop","ondropdeactivate","App","_s","baseURL","message","setMessage","then","res","textboxes","className","children","class","map","box","createElement","id","order","content","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/cmemery/Desktop/parsons-problems/client/src/App.js"],"sourcesContent":["// Video4Ever Starter Code\r\n// Dr. Miller\r\n// Start your React app using npm start while in the client directory\r\nimport interact from 'interactjs';\r\nimport './App.css';\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\n  // You can use this function for sending POST requests You can modify it if you want to use it for GET requests as well\r\n  // This is an asynchronous function meaning that it returns a Promise\r\n  // A Promise means it will either return a valid value or reject the request\r\n  // Promises are important for  operations that take time such as querying a database or fetching data from a server\r\n  // Using await means this function will suspend execution until the Promise resolves so it won't return until it has a response\r\n  // The await keyword only works in asynchronous functions\r\n  async function postData(url = \"\", data = {}) {\r\n    // Default options are marked with *\r\n    const response = await fetch(url, {\r\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n      mode: \"cors\", // no-cors, *cors, same-origin\r\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n      credentials: \"same-origin\", // include, *same-origin, omit\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      redirect: \"follow\", // manual, *follow, error\r\n      referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n      body: JSON.stringify(data), // body data type must match \"Content-Type\" header\r\n    });\r\n    return response.json(); // parses JSON response into native JavaScript objects\r\n}\r\n/* */\r\n// target elements with the \"draggable\" class\r\ninteract('.draggable')\r\n  .draggable({\r\n    // keep the element within the area of it's parent\r\n    modifiers: [\r\n      interact.modifiers.snap({\r\n        targets: [\r\n          interact.snappers.grid({ x: 60, y: 30 })\r\n        ],\r\n        range: Infinity,\r\n        relativePoints: [ { x: 0, y: 0 } ]\r\n      }),\r\n      interact.modifiers.restrict({\r\n        restriction: 'parent',\r\n        elementRect: { top: 0, left: .5, bottom: 0, right: .5 },\r\n        endOnly: true\r\n      })\r\n  \r\n    ],\r\n\r\n    listeners: {\r\n      // call this function on every dragmove event\r\n      move: dragMoveListener\r\n\r\n      //changes element text to \"element moved xyz pixels idk\"\r\n      // call this function on every dragend event\r\n      //end (event) {\r\n        /*\r\n        var textEl = event.target.querySelector('p')\r\n\r\n        textEl && (textEl.textContent =\r\n          'moved a distance of ' +\r\n          (Math.sqrt(Math.pow(event.pageX - event.x0, 2) +\r\n                     Math.pow(event.pageY - event.y0, 2) | 0))\r\n            .toFixed(2) + 'px')\r\n            */\r\n      //}\r\n    }\r\n  })\r\n  .resizable({\r\n    // resize from all edges and corners\r\n    edges: { left: true, right: true, bottom: true, top: true },\r\n\r\n    listeners: {\r\n      move (event) {\r\n        var target = event.target\r\n        var x = (parseFloat(target.getAttribute('data-x')) || 0)\r\n        var y = (parseFloat(target.getAttribute('data-y')) || 0)\r\n\r\n        // update the element's style\r\n        target.style.width = event.rect.width + 'px'\r\n        target.style.height = event.rect.height + 'px'\r\n\r\n        // translate when resizing from top or left edges\r\n        x += event.deltaRect.left\r\n        y += event.deltaRect.top\r\n\r\n        target.style.transform = 'translate(' + x + 'px,' + y + 'px)'\r\n\r\n        target.setAttribute('data-x', x)\r\n        target.setAttribute('data-y', y)\r\n        target.textContent = Math.round(event.rect.width) + '\\u00D7' + Math.round(event.rect.height)\r\n      }\r\n    },\r\n    modifiers: [\r\n      // keep the edges inside the parent\r\n      interact.modifiers.restrictEdges({\r\n        outer: 'parent'\r\n      }),\r\n\r\n      // minimum size\r\n      interact.modifiers.restrictSize({\r\n        min: { width: 100, height: 50 }\r\n      })\r\n    ],\r\n\r\n    inertia: true\r\n  })\r\n\r\nfunction dragMoveListener (event) {\r\n  var target = event.target;\r\n  // keep the dragged position in the data-x/data-y attributes\r\n  var x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx;\r\n  var y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy;\r\n\r\n  // translate the element\r\n  target.style.transform = 'translate(' + x + 'px, ' + y + 'px)';\r\n\r\n  // update the posiion attributes\r\n  target.setAttribute('data-x', x);\r\n  target.setAttribute('data-y', y);\r\n}\r\n// this function is used later in the resizing and gesture demos\r\nwindow.dragMoveListener = dragMoveListener;\r\n\r\ninteract('.dropzone').dropzone({\r\n  // only accept elements matching this CSS selector\r\n  accept: '#yes-drop',\r\n  // Require a 75% element overlap for a drop to be possible\r\n  overlap: 0.75,\r\n\r\n  // listen for drop related events:\r\n\r\n  ondropactivate: function (event) {\r\n    // add active dropzone feedback\r\n    event.target.classList.add('drop-active')\r\n  },\r\n  ondragenter: function (event) {\r\n    var draggableElement = event.relatedTarget\r\n    var dropzoneElement = event.target\r\n\r\n    // feedback the possibility of a drop\r\n    dropzoneElement.classList.add('drop-target')\r\n    draggableElement.classList.add('can-drop')\r\n    draggableElement.textContent = 'Dragged in'\r\n  },\r\n  ondragleave: function (event) {\r\n    // remove the drop feedback style\r\n    event.target.classList.remove('drop-target')\r\n    event.relatedTarget.classList.remove('can-drop')\r\n    event.relatedTarget.textContent = 'Dragged out'\r\n  },\r\n  ondrop: function (event) {\r\n    event.relatedTarget.textContent = 'Dropped'\r\n  },\r\n  ondropdeactivate: function (event) {\r\n    // remove active dropzone feedback\r\n    event.target.classList.remove('drop-active')\r\n    event.target.classList.remove('drop-target')\r\n  }\r\n})\r\n\r\nfunction App() {\r\n  // Use this variable whenever you want to connect to the Node.js server\r\n  // When you create production version of a React app, this address will change\r\n  const baseURL = \"http://localhost:8000/\";\r\n\r\n  // This is an example variable (message) that can be changed with the setMessage function\r\n  // The initial state of the message is an empty string. When the variable is changed, it changes everywhere it is used.\r\n  // This is referred to as a state hook\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  // useEffect will run when the app loads\r\n  // This is referred to as an effect hook\r\n  // This effect will modify the message based on what is returned from a GET request to the server's message \r\n  useEffect(() => {\r\n    fetch(`${baseURL}message`)\r\n      .then((res) => res.json())\r\n      .then((data) => {setMessage(data.message);}\r\n      );\r\n  }, []);\r\n  const textboxes = [\r\n      {\"order\":\"1\", \"content\":\"asdf1\"},\r\n      {\"order\":\"2\", \"content\":\"asdf2\"},\r\n      {\"order\":\"3\", \"content\":\"asdf3\"}\r\n    ];\r\n  // The message variable is displayed below and will update, if necessary\r\n  // You can put any Javascript (JSX) code within curly brackets in a React app\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n      \r\n        <div class=\"test-box\">\r\n          \r\n        {\r\n            textboxes.map((box) => \r\n              React.createElement('div', {id: \"drag-\"+box.order, class:\"draggable\"}, box.content)\r\n            )\r\n        }\r\n        </div>\r\n        <div id=\"drag-1\" class=\"dropzone\">#inner-dropzone</div>\r\n\r\n        \r\n      </header>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA,OAAOA,QAAQ,MAAM,YAAY;AACjC,OAAO,WAAW;AAClB,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAEhD;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,eAAeC,QAAQA,CAACC,GAAG,GAAG,EAAE,EAAEC,IAAI,GAAG,CAAC,CAAC,EAAE;EAC3C;EACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,EAAE;IAChCI,MAAM,EAAE,MAAM;IAAE;IAChBC,IAAI,EAAE,MAAM;IAAE;IACdC,KAAK,EAAE,UAAU;IAAE;IACnBC,WAAW,EAAE,aAAa;IAAE;IAC5BC,OAAO,EAAE;MACP,cAAc,EAAE;MAChB;IACF,CAAC;IACDC,QAAQ,EAAE,QAAQ;IAAE;IACpBC,cAAc,EAAE,aAAa;IAAE;IAC/BC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,IAAI,CAAC,CAAE;EAC9B,CAAC,CAAC;EACF,OAAOC,QAAQ,CAACY,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5B;AACA;AACA;AACArB,QAAQ,CAAC,YAAY,CAAC,CACnBsB,SAAS,CAAC;EACT;EACAC,SAAS,EAAE,CACTvB,QAAQ,CAACuB,SAAS,CAACC,IAAI,CAAC;IACtBC,OAAO,EAAE,CACPzB,QAAQ,CAAC0B,QAAQ,CAACC,IAAI,CAAC;MAAEC,CAAC,EAAE,EAAE;MAAEC,CAAC,EAAE;IAAG,CAAC,CAAC,CACzC;IACDC,KAAK,EAAEC,QAAQ;IACfC,cAAc,EAAE,CAAE;MAAEJ,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC;EAClC,CAAC,CAAC,EACF7B,QAAQ,CAACuB,SAAS,CAACU,QAAQ,CAAC;IAC1BC,WAAW,EAAE,QAAQ;IACrBC,WAAW,EAAE;MAAEC,GAAG,EAAE,CAAC;MAAEC,IAAI,EAAE,EAAE;MAAEC,MAAM,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAG,CAAC;IACvDC,OAAO,EAAE;EACX,CAAC,CAAC,CAEH;EAEDC,SAAS,EAAE;IACT;IACAC,IAAI,EAAEC;;IAEN;IACA;IACA;IACE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;IAEM;EACF;AACF,CAAC,CAAC,CACDC,SAAS,CAAC;EACT;EACAC,KAAK,EAAE;IAAER,IAAI,EAAE,IAAI;IAAEE,KAAK,EAAE,IAAI;IAAED,MAAM,EAAE,IAAI;IAAEF,GAAG,EAAE;EAAK,CAAC;EAE3DK,SAAS,EAAE;IACTC,IAAIA,CAAEI,KAAK,EAAE;MACX,IAAIC,MAAM,GAAGD,KAAK,CAACC,MAAM;MACzB,IAAInB,CAAC,GAAIoB,UAAU,CAACD,MAAM,CAACE,YAAY,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAE;MACxD,IAAIpB,CAAC,GAAImB,UAAU,CAACD,MAAM,CAACE,YAAY,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAE;;MAExD;MACAF,MAAM,CAACG,KAAK,CAACC,KAAK,GAAGL,KAAK,CAACM,IAAI,CAACD,KAAK,GAAG,IAAI;MAC5CJ,MAAM,CAACG,KAAK,CAACG,MAAM,GAAGP,KAAK,CAACM,IAAI,CAACC,MAAM,GAAG,IAAI;;MAE9C;MACAzB,CAAC,IAAIkB,KAAK,CAACQ,SAAS,CAACjB,IAAI;MACzBR,CAAC,IAAIiB,KAAK,CAACQ,SAAS,CAAClB,GAAG;MAExBW,MAAM,CAACG,KAAK,CAACK,SAAS,GAAG,YAAY,GAAG3B,CAAC,GAAG,KAAK,GAAGC,CAAC,GAAG,KAAK;MAE7DkB,MAAM,CAACS,YAAY,CAAC,QAAQ,EAAE5B,CAAC,CAAC;MAChCmB,MAAM,CAACS,YAAY,CAAC,QAAQ,EAAE3B,CAAC,CAAC;MAChCkB,MAAM,CAACU,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACb,KAAK,CAACM,IAAI,CAACD,KAAK,CAAC,GAAG,QAAQ,GAAGO,IAAI,CAACC,KAAK,CAACb,KAAK,CAACM,IAAI,CAACC,MAAM,CAAC;IAC9F;EACF,CAAC;EACD9B,SAAS,EAAE;EACT;EACAvB,QAAQ,CAACuB,SAAS,CAACqC,aAAa,CAAC;IAC/BC,KAAK,EAAE;EACT,CAAC,CAAC;EAEF;EACA7D,QAAQ,CAACuB,SAAS,CAACuC,YAAY,CAAC;IAC9BC,GAAG,EAAE;MAAEZ,KAAK,EAAE,GAAG;MAAEE,MAAM,EAAE;IAAG;EAChC,CAAC,CAAC,CACH;EAEDW,OAAO,EAAE;AACX,CAAC,CAAC;AAEJ,SAASrB,gBAAgBA,CAAEG,KAAK,EAAE;EAChC,IAAIC,MAAM,GAAGD,KAAK,CAACC,MAAM;EACzB;EACA,IAAInB,CAAC,GAAG,CAACoB,UAAU,CAACD,MAAM,CAACE,YAAY,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAIH,KAAK,CAACmB,EAAE;EACnE,IAAIpC,CAAC,GAAG,CAACmB,UAAU,CAACD,MAAM,CAACE,YAAY,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAIH,KAAK,CAACoB,EAAE;;EAEnE;EACAnB,MAAM,CAACG,KAAK,CAACK,SAAS,GAAG,YAAY,GAAG3B,CAAC,GAAG,MAAM,GAAGC,CAAC,GAAG,KAAK;;EAE9D;EACAkB,MAAM,CAACS,YAAY,CAAC,QAAQ,EAAE5B,CAAC,CAAC;EAChCmB,MAAM,CAACS,YAAY,CAAC,QAAQ,EAAE3B,CAAC,CAAC;AAClC;AACA;AACAsC,MAAM,CAACxB,gBAAgB,GAAGA,gBAAgB;AAE1C3C,QAAQ,CAAC,WAAW,CAAC,CAACoE,QAAQ,CAAC;EAC7B;EACAC,MAAM,EAAE,WAAW;EACnB;EACAC,OAAO,EAAE,IAAI;EAEb;;EAEAC,cAAc,EAAE,SAAAA,CAAUzB,KAAK,EAAE;IAC/B;IACAA,KAAK,CAACC,MAAM,CAACyB,SAAS,CAACC,GAAG,CAAC,aAAa,CAAC;EAC3C,CAAC;EACDC,WAAW,EAAE,SAAAA,CAAU5B,KAAK,EAAE;IAC5B,IAAI6B,gBAAgB,GAAG7B,KAAK,CAAC8B,aAAa;IAC1C,IAAIC,eAAe,GAAG/B,KAAK,CAACC,MAAM;;IAElC;IACA8B,eAAe,CAACL,SAAS,CAACC,GAAG,CAAC,aAAa,CAAC;IAC5CE,gBAAgB,CAACH,SAAS,CAACC,GAAG,CAAC,UAAU,CAAC;IAC1CE,gBAAgB,CAAClB,WAAW,GAAG,YAAY;EAC7C,CAAC;EACDqB,WAAW,EAAE,SAAAA,CAAUhC,KAAK,EAAE;IAC5B;IACAA,KAAK,CAACC,MAAM,CAACyB,SAAS,CAACO,MAAM,CAAC,aAAa,CAAC;IAC5CjC,KAAK,CAAC8B,aAAa,CAACJ,SAAS,CAACO,MAAM,CAAC,UAAU,CAAC;IAChDjC,KAAK,CAAC8B,aAAa,CAACnB,WAAW,GAAG,aAAa;EACjD,CAAC;EACDuB,MAAM,EAAE,SAAAA,CAAUlC,KAAK,EAAE;IACvBA,KAAK,CAAC8B,aAAa,CAACnB,WAAW,GAAG,SAAS;EAC7C,CAAC;EACDwB,gBAAgB,EAAE,SAAAA,CAAUnC,KAAK,EAAE;IACjC;IACAA,KAAK,CAACC,MAAM,CAACyB,SAAS,CAACO,MAAM,CAAC,aAAa,CAAC;IAC5CjC,KAAK,CAACC,MAAM,CAACyB,SAAS,CAACO,MAAM,CAAC,aAAa,CAAC;EAC9C;AACF,CAAC,CAAC;AAEF,SAASG,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA;EACA,MAAMC,OAAO,GAAG,wBAAwB;;EAExC;EACA;EACA;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGpF,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA;EACA;EACAC,SAAS,CAAC,MAAM;IACdO,KAAK,CAAE,GAAE0E,OAAQ,SAAQ,CAAC,CACvBG,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACnE,IAAI,CAAC,CAAC,CAAC,CACzBkE,IAAI,CAAE/E,IAAI,IAAK;MAAC8E,UAAU,CAAC9E,IAAI,CAAC6E,OAAO,CAAC;IAAC,CAC1C,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EACN,MAAMI,SAAS,GAAG,CACd;IAAC,OAAO,EAAC,GAAG;IAAE,SAAS,EAAC;EAAO,CAAC,EAChC;IAAC,OAAO,EAAC,GAAG;IAAE,SAAS,EAAC;EAAO,CAAC,EAChC;IAAC,OAAO,EAAC,GAAG;IAAE,SAAS,EAAC;EAAO,CAAC,CACjC;EACH;EACA;EACA,oBACEpF,OAAA;IAAKqF,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBtF,OAAA;MAAQqF,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAE5BtF,OAAA;QAAKuF,KAAK,EAAC,UAAU;QAAAD,QAAA,EAGjBF,SAAS,CAACI,GAAG,CAAEC,GAAG,iBAChB7F,KAAK,CAAC8F,aAAa,CAAC,KAAK,EAAE;UAACC,EAAE,EAAE,OAAO,GAACF,GAAG,CAACG,KAAK;UAAEL,KAAK,EAAC;QAAW,CAAC,EAAEE,GAAG,CAACI,OAAO,CACpF;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEA,CAAC,eACNjG,OAAA;QAAK2F,EAAE,EAAC,QAAQ;QAACJ,KAAK,EAAC,UAAU;QAAAD,QAAA,EAAC;MAAe;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGjD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEN,CAAC;AAEV;AAACnB,EAAA,CA7CQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AA+CZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}