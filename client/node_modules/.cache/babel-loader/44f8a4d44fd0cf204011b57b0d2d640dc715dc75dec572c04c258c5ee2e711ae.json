{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cmemery\\\\Desktop\\\\parsons-problems\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// Video4Ever Starter Code\n// Dr. Miller\n// Start your React app using npm start while in the client directory\nimport interact from 'interact';\nimport './App.css';\nimport React, { useState, useEffect } from \"react\";\n\n// You can use this function for sending POST requests You can modify it if you want to use it for GET requests as well\n// This is an asynchronous function meaning that it returns a Promise\n// A Promise means it will either return a valid value or reject the request\n// Promises are important for  operations that take time such as querying a database or fetching data from a server\n// Using await means this function will suspend execution until the Promise resolves so it won't return until it has a response\n// The await keyword only works in asynchronous functions\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function postData(url = \"\", data = {}) {\n  // Default options are marked with *\n  const response = await fetch(url, {\n    method: \"POST\",\n    // *GET, POST, PUT, DELETE, etc.\n    mode: \"cors\",\n    // no-cors, *cors, same-origin\n    cache: \"no-cache\",\n    // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"same-origin\",\n    // include, *same-origin, omit\n    headers: {\n      \"Content-Type\": \"application/json\"\n      // 'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    redirect: \"follow\",\n    // manual, *follow, error\n    referrerPolicy: \"no-referrer\",\n    // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n  });\n  return response.json(); // parses JSON response into native JavaScript objects\n}\n// target elements with the \"draggable\" class\ninteract('.draggable').draggable({\n  // enable inertial throwing\n  inertia: true,\n  // keep the element within the area of it's parent\n  modifiers: [interact.modifiers.restrictRect({\n    restriction: 'parent',\n    endOnly: true\n  })],\n  // enable autoScroll\n  autoScroll: true,\n  listeners: {\n    // call this function on every dragmove event\n    move: dragMoveListener,\n    // call this function on every dragend event\n    end(event) {\n      var textEl = event.target.querySelector('p');\n      textEl && (textEl.textContent = 'moved a distance of ' + Math.sqrt(Math.pow(event.pageX - event.x0, 2) + Math.pow(event.pageY - event.y0, 2) | 0).toFixed(2) + 'px');\n    }\n  }\n});\nfunction dragMoveListener(event) {\n  var target = event.target;\n  // keep the dragged position in the data-x/data-y attributes\n  var x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx;\n  var y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy;\n\n  // translate the element\n  target.style.transform = 'translate(' + x + 'px, ' + y + 'px)';\n\n  // update the posiion attributes\n  target.setAttribute('data-x', x);\n  target.setAttribute('data-y', y);\n}\n\n// this function is used later in the resizing and gesture demos\nwindow.dragMoveListener = dragMoveListener;\nfunction App() {\n  _s();\n  // Use this variable whenever you want to connect to the Node.js server\n  // When you create production version of a React app, this address will change\n  const baseURL = \"http://localhost:8000/\";\n\n  // This is an example variable (message) that can be changed with the setMessage function\n  // The initial state of the message is an empty string. When the variable is changed, it changes everywhere it is used.\n  // This is referred to as a state hook\n  const [message, setMessage] = useState(\"\");\n\n  // useEffect will run when the app loads\n  // This is referred to as an effect hook\n  // This effect will modify the message based on what is returned from a GET request to the server's message \n  useEffect(() => {\n    fetch(`${baseURL}message`).then(res => res.json()).then(data => {\n      setMessage(data.message);\n    });\n  }, []);\n\n  // The message variable is displayed below and will update, if necessary\n  // You can put any Javascript (JSX) code within curly brackets in a React app\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"drag-1\",\n        class: \"draggable\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" You can drag one element \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"drag-2\",\n        class: \"draggable\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" with each pointer \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ClLa+zvPL6vd0LAuHSvav3BaFBg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["interact","React","useState","useEffect","jsxDEV","_jsxDEV","postData","url","data","response","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","json","draggable","inertia","modifiers","restrictRect","restriction","endOnly","autoScroll","listeners","move","dragMoveListener","end","event","textEl","target","querySelector","textContent","Math","sqrt","pow","pageX","x0","pageY","y0","toFixed","x","parseFloat","getAttribute","dx","y","dy","style","transform","setAttribute","window","App","_s","baseURL","message","setMessage","then","res","className","children","id","class","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/cmemery/Desktop/parsons-problems/client/src/App.js"],"sourcesContent":["// Video4Ever Starter Code\r\n// Dr. Miller\r\n// Start your React app using npm start while in the client directory\r\nimport interact from 'interact';\r\nimport './App.css';\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\n  // You can use this function for sending POST requests You can modify it if you want to use it for GET requests as well\r\n  // This is an asynchronous function meaning that it returns a Promise\r\n  // A Promise means it will either return a valid value or reject the request\r\n  // Promises are important for  operations that take time such as querying a database or fetching data from a server\r\n  // Using await means this function will suspend execution until the Promise resolves so it won't return until it has a response\r\n  // The await keyword only works in asynchronous functions\r\n  async function postData(url = \"\", data = {}) {\r\n    // Default options are marked with *\r\n    const response = await fetch(url, {\r\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n      mode: \"cors\", // no-cors, *cors, same-origin\r\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n      credentials: \"same-origin\", // include, *same-origin, omit\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      redirect: \"follow\", // manual, *follow, error\r\n      referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n      body: JSON.stringify(data), // body data type must match \"Content-Type\" header\r\n    });\r\n    return response.json(); // parses JSON response into native JavaScript objects\r\n}\r\n// target elements with the \"draggable\" class\r\ninteract('.draggable')\r\n  .draggable({\r\n    // enable inertial throwing\r\n    inertia: true,\r\n    // keep the element within the area of it's parent\r\n    modifiers: [\r\n      interact.modifiers.restrictRect({\r\n        restriction: 'parent',\r\n        endOnly: true\r\n      })\r\n    ],\r\n    // enable autoScroll\r\n    autoScroll: true,\r\n\r\n    listeners: {\r\n      // call this function on every dragmove event\r\n      move: dragMoveListener,\r\n\r\n      // call this function on every dragend event\r\n      end (event) {\r\n        var textEl = event.target.querySelector('p')\r\n\r\n        textEl && (textEl.textContent =\r\n          'moved a distance of ' +\r\n          (Math.sqrt(Math.pow(event.pageX - event.x0, 2) +\r\n                     Math.pow(event.pageY - event.y0, 2) | 0))\r\n            .toFixed(2) + 'px')\r\n      }\r\n    }\r\n  })\r\n\r\nfunction dragMoveListener (event) {\r\n  var target = event.target\r\n  // keep the dragged position in the data-x/data-y attributes\r\n  var x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx\r\n  var y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy\r\n\r\n  // translate the element\r\n  target.style.transform = 'translate(' + x + 'px, ' + y + 'px)'\r\n\r\n  // update the posiion attributes\r\n  target.setAttribute('data-x', x)\r\n  target.setAttribute('data-y', y)\r\n}\r\n\r\n// this function is used later in the resizing and gesture demos\r\nwindow.dragMoveListener = dragMoveListener\r\nfunction App() {\r\n  // Use this variable whenever you want to connect to the Node.js server\r\n  // When you create production version of a React app, this address will change\r\n  const baseURL = \"http://localhost:8000/\";\r\n\r\n  // This is an example variable (message) that can be changed with the setMessage function\r\n  // The initial state of the message is an empty string. When the variable is changed, it changes everywhere it is used.\r\n  // This is referred to as a state hook\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  // useEffect will run when the app loads\r\n  // This is referred to as an effect hook\r\n  // This effect will modify the message based on what is returned from a GET request to the server's message \r\n  useEffect(() => {\r\n    fetch(`${baseURL}message`)\r\n      .then((res) => res.json())\r\n      .then((data) => {setMessage(data.message);}\r\n      );\r\n  }, []);\r\n  \r\n\r\n  // The message variable is displayed below and will update, if necessary\r\n  // You can put any Javascript (JSX) code within curly brackets in a React app\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n      \r\n    \r\n      <div id=\"drag-1\" class=\"draggable\">\r\n  <p> You can drag one element </p>\r\n</div>\r\n<div id=\"drag-2\" class=\"draggable\">\r\n  <p> with each pointer </p>\r\n</div>\r\n\r\n      </header>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}